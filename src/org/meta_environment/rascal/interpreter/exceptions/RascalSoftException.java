package org.meta_environment.rascal.interpreter.exceptions;

import org.eclipse.imp.pdb.facts.IValue;
import org.meta_environment.rascal.ast.AbstractAST;

/**
 * This class is for representing
 *  - "soft" execptions that are generated by the Rascal implementation and can be
 *    caught by Rascal code
 *  - user exceptions in Rascal that are thrown but by Rascal code. Embedded Java
 *    code that throws exceptions can also use this exception class.
 * 
 * Warning: this is not a thread safe implementation. The idea however is to not
 * create a stack trace every time a Return exception is needed.
 * 
 */
public class RascalSoftException extends RascalException {

	private static final long serialVersionUID = -7290501865940548332L;
	
	public RascalSoftException(IValue value) {
		super(value);
	};
	
	public RascalSoftException(IValue value, AbstractAST node) {
		super(value, node);
	};

	public RascalSoftException(String errorCons, String message) {
		super(errorCons, message);
	}

	public RascalSoftException(String errorCons, String message, AbstractAST node) {
		super(errorCons, message, node);
	}
	
	public RascalSoftException(String message, Throwable cause) {
		super(message, cause);
	}
}

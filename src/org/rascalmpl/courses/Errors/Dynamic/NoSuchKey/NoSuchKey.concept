Name: NoSuchKey

Synopsis: A map does not contain a requested key.

Syntax:

Types:

Function: `data RunTimeException = NoSuchKey(value key);`
Usage: `import Exception;`

Details:

Description:
Rascal provides many operations and functions on maps, see [Rascal:Values/Map] and [Rascal:Prelude/Map].
This error is generated when a function or operation cannot find a requested key value in a map.

Remedies: 
* Use the [Rascal:IsDefined] or [Rascal:IfDefinedElse] operator to guard a lookup in a map.
* Catch the `NoSuchKey` yourself, see [Rascal:TryCatch].

Examples:
<screen warnings>
// Import the `Map` and `IO` libraries and introduce map `M`:
import Map;
import IO;
M = ("a" : 1, "b" : 2);
// Indexing `M` with a non-existing key gives an error:
M["c"]
// Use the postfix isDefined operator `?` to test whether the value is defined:
if(M["c"]?) println("defined"); else println("not defined");
// Or use the binary ifDefinedElse operator `?` to return an alternative value
// when the value of `M["c"]` is undefined:
M["c"] ? 3
// Yet another solution is to use try/catch.
// First we import the Rascal exceptions (which are also included in `Prelude`):
import Exception;
try println(M["c"]); catch NoSuchKey(k): println("Key <k> does not exist");
</screen>

Benefits:

Pitfalls:

Questions:

       
       
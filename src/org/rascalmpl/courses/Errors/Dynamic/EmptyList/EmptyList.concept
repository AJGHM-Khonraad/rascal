Name: EmptyList

Synopsis: Illegal operation on an empty list.

Syntax:

Types:

Function:
       
Usage:

Details:

Description:
Rascal provides many operations and functions on lists, see [Rascal:Values/List] and [Rascal:Prelude/List].
This error is generated when a function or operation cannot handle the empty list.

Remedies:
* Guard the function or operation with a test on the empty list ([$Rascal:List/isEmpty]) and 
  take alternative action in that case.
* Catch the `EmptyList` yourself, see [Rascal:TryCatch].


Examples:
<screen warnings>
// Import the `List` library and introduce `L` with an empty list as value:
import List;
L = [];
// Taking the head of an empty list gives an error:
head(L);
// This is the case when taking the tail as well:
tail(L);
// We can also catch the `EmptyList` error. First import the Rascal exceptions (which are also included in `Prelude`)
// and `IO`:
import Exception;
import IO;
try println(head(L)); catch EmptyList(): println("Cannot take head of empty list");
</screen>

Benefits:

Pitfalls:

Questions:

       
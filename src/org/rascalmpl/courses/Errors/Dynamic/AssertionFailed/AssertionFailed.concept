Name: AssertionFailed

Synopsis: An assertion in the Rascal code is false.

Syntax:

Types:

Function:
       
Usage:

Details:

Description:
An [Rascal:Assert] statement can be used to check assumptions during the execution of a Rascal program.
This error is generated if an assertion is not true.

Remedies:
* Modify your code to make the assertion true.
* Modify your assertion to reflect the current behaviour of your code.
* Catch the `AssertionFailed` yourself, see [Rascal:TryCatch].


Examples:
<screen warnings>
// A false assertion gives an error:
assert 3 > 4;
// Define a function that only increments positive integers:
int incrPositive(int n) { assert n > 0; return n + 1; }
// Calling it with a positive integer is fine:
incrPositive(3);
// But a negative argument gives an error:
incrPositive(-3);
// We can also catch the `AssertionFailed` error. First import the Rascal exceptions (which are also included in `Prelude`)
// and `IO`:
import Exception;
import IO;
try println(incrPositive(-3)); catch AssertionFailed(): println("incrPositive applied to an not positive argument");
</screen>

Benefits:

Pitfalls:

Questions:

       
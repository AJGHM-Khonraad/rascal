define M1 {module M1 public int x = 0;}

define Y {int y = 1;}

define triple {int triple(int x) = 3 * x;}


test 1 variables { y = V0; } expect {T0 y}

test 1 variables { T0 y = V0; } expect {T0 y}

test 1 variables { T0 X0 = V0; y = V0; } expect {T0 y}

test 1 variables { T0 X0 = V0; y = X0; } expect {T0 y}

test 1 variables { T0 X0 = V0; T0 y = X0; } expect {T0 y}

test 2 variables { T0 X0 = V0; T1 X1 = V1;} expect {T0 X0, T1 X1}

test 2 variables {x = V0; x = V1; } expect{LUB(T0,T1) x}

test 1 variables { T0 X0 = V0; if(true) y = X0; else y = V0; } expect { T0 y }

test 0 variables { int x = 1; x = false; } expect {/Unable to bind subject type/}

test 0 variables { use Y :: y; } expect {int y}

test 0 variables { use triple :: triple([1,2,3]); } expect {/cannot be called with argument/}

test 0 variables {int x = 3; y = x + "a";} expect{/Addition not defined/}

test 0 variables {int x = 3; y = x - "a";} expect{/Subtraction not defined/}

test 0 variables { use M1 :: x; } expect {int x}
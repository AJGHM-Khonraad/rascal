concept("Enumerators",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Concepts/Enumerators/Enumerators.concept|,[],{},{},"","","","",{},"Enumerators enumerate the values in a given (finite) domain, be it the elements in a list, the substrings of a string, \nor all the nodes in a tree. \nEach value that is enumerated is first matched against a pattern before it can possibly contribute to the result of \nthe enumerator.\n","\<pre class=\"listing\"\>int x &lt;- { 1, 3, 5, 7, 11 }\nint x &lt;- [ 1 .. 10 ]\n/asgStat(Id name, _) &lt;- P\n\</pre\>\nThe first two produce the integer elements of a set of integers, respectively, a range of integers. \nObserve that the left-hand side of an enumerator is a pattern, of which \<code\>int x\</code\> is a specific instance. \nThe use of more general patterns is illustrated by the third enumerator that does a deep traversal \n(as denoted by the descendant operator \<code\>/\</code\>) of the complete program \<code\>P\</code\> (that is assumed to have a \n\<code\>PROGRAM\</code\> as value) and only yields statements that match the assignment pattern (\<code\>asgStat\</code\>).\nNote the use of an anonymous variable at the \<code\>EXP\</code\> position in the pattern.\n","","",[])
concept("Join",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Join/Join.concept|,[],[],{"Language"},{},""," \<code\>\n  \<i\>Exp\</i\>\<sub\>1\</sub\> join \<i\>Exp\</i\>\<sub\>2\</sub\>\n\</code\>\n"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\>                            \</th\>\<th align=\"left\"\>  \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\>                            \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\> join \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\>                                            \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      rel[ \<i\>T\</i\>\<sub\>11\</sub\>, \<i\>T\</i\>\<sub\>12\</sub\>, \<i\>T\</i\>\<sub\>13\</sub\>, ... ]\n    \</code\> \n  \</td\>\<td align=\"left\"\>\n      \<code\>\n      rel[ \<i\>T\</i\>\<sub\>21\</sub\>, \<i\>T\</i\>\<sub\>22\</sub\>, \<i\>T\</i\>\<sub\>23\</sub\>, ... ]\n    \</code\> \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      rel[ \<i\>T\</i\>\<sub\>11\</sub\>, \<i\>T\</i\>\<sub\>12\</sub\>, \<i\>T\</i\>\<sub\>13\</sub\>, ..., \<i\>T\</i\>\<sub\>21\</sub\>, \<i\>T\</i\>\<sub\>22\</sub\>, \<i\>T\</i\>\<sub\>23\</sub\>, ... ]\n    \</code\> \n  \</td\>\</tr\>\n\</table\>","",{"]",",","[","join","rel"}," Relation resulting from the natural join of the relation values of the two arguments.\n This relation contains tuples that are the result from concatenating the elements from both arguments.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>{&lt;1,2&gt;, &lt;10,20&gt;} join {&lt;2,3&gt;};\nrel[int, int, int, int]: {\n  &lt;1,2,2,3&gt;,\n  &lt;10,20,2,3&gt;\n}\n\<b\>rascal\>\</b\>{&lt;1,2&gt;} join {3, 4};\nrel[int, int, int]: {\n  &lt;1,2,4&gt;,\n  &lt;1,2,3&gt;\n}\n\</pre\>","","",[])
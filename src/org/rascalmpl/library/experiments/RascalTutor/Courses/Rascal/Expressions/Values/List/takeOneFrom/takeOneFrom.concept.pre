<<<<<<< .mine
concept("takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/takeOneFrom/takeOneFrom.concept|,[],[],{},"","",""," \<code\>tuple[&amp;T, list[&amp;T]] takeOneFrom(list[&amp;T] lst) throws EmptyList\</code\>\n",{}," Select an arbitrary element from \<code\>lst\</code\>, and return a tuple consisting of:\n \<ul\>\<li\> the selected element, and \</li\>\n\<li\> a new list consisting of all elements of \<code\>lst\</code\> except the selected element.\</li\>\n\</ul\>"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import List;\nok\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;40,[10,20,30,50]&gt;\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;10,[20,30,40,50]&gt;\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;20,[10,30,40,50]&gt;\n\</pre\>","","",[])=======
concept("takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/takeOneFrom/takeOneFrom.concept|,[],[],{"Library"},{},"","",""," \<code\>tuple[&amp;T, list[&amp;T]] takeOneFrom(list[&amp;T] lst) throws EmptyList\</code\>\n",{}," Select an arbitrary element from \<code\>lst\</code\>, and return a tuple consisting of:\n \<ul\>\<li\> the selected element, and \</li\>\n\<li\> a new list consisting of all elements of \<code\>lst\</code\> except the selected element.\</li\>\n\</ul\>"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import List;\nok\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;20,[10,30,40,50]&gt;\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;10,[20,30,40,50]&gt;\n\<b\>rascal\>\</b\>takeOneFrom([10,20,30,40,50]);\ntuple[int,list[int]]: &lt;50,[10,20,30,40]&gt;\n\</pre\>","","",[])>>>>>>> .r36072

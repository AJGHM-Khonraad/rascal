concept("print",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/print/print.concept|,[],[],{"println"},"","",""," \<code\>bool print(value V...)\</code\>\n",{}," Print a list of values on the output stream and always return \<code\>true\</code\>. \n"," Note that the only difference with \<a href=\"/show?concept=println\"\>println\</a\> is that \<code\>true\</code\> is returned instead of \<code\>void\</code\>:\n \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import IO;\nok\n\<b\>rascal\>\</b\>print(&quot;Hello World&quot;);\nHello Worldok\n\</pre\>\n  Introduce to variable and print their values:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>S = &quot;Hello World&quot;;\nstr: &quot;Hello World&quot;\n\<b\>rascal\>\</b\>L = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;];\nlist[str]: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]\n\<b\>rascal\>\</b\>print(S, L);\nStatic Error: prompt:///:1,0: The called signature: print(str, list[str]),\ndoes not match the declared signature:    print(value)\n\</pre\>"," This function is handy when debugging complicated expressions.\n","",[])
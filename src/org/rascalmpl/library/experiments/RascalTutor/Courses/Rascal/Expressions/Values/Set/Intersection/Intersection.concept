Name:Intersection

Categories: Language

Synopsis:
* Syntax: `$Exp_1$ & $Exp_2$`
* Type:


| `$Exp_1$`    |  `$Exp_2$`      | Result                             |
|:-----------|:------------|:--------------------|
| `set[$T_1$]`  |  `set[$T_2$]`   | `set[lub($T_1$,$T_2$)]`   |
| `set[$T_1$]`  |  `$T_2$`          | `set[lub($T_1$,$T_2$)]`   |
| `$T_1$`         |  `set[$T_2$]`   | `set[lub($T_1$,$T_2$)]`   |

Description:
If both $Exp_1$ and $Exp_2$ have a set as value, the result is the intersection of these two set values. If one of $Exp_1$ or $Exp_2$ does not have a set as value, it is first converted to a set before the intersection is computed.

Examples:
<warning>& seems to miss the case for a non-set argument</warning>
<screen>
{1, 2, 3, 4, 5} & {4, 5, 6};
{1, 2, 3} & 4;
1 & {1, 2, 3, 4};
</screen>

Benefits:

Pittfalls:

Questions:

Choice: When you compute the intersection of two sets, the number of elements in the result is always:
b: Greater than the number of elements in both sets.
b: Greater than or equal the number of elements in both sets.
b: Smaller than the number of elements in both sets.
g: Smaller than or equal the number of elements in both sets.


Type:  <A:set[arb[int,str]]> & <B:same[A]>

Type:  <A:set[arb]> & <B:same[A]>

Value: <A:set[arb[0,int,str,num,real]]> & <B:same[A]>


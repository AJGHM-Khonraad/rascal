concept("AmbiguityDetection",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDetection/AmbiguityDetection.concept|,["[AmbiDexter] is now a separate commandline tool which still needs integration"],[],{},{"DrAmbiguity","Ambiguity","AmbiDexter","Disambiguation","SyntaxDefinition"}," \<a href=\"/show?concept=AmbiDexter\"\>AmbiDexter\</a\> is a tool that analyzes \<a href=\"/show?concept=SyntaxDefinition\"\>SyntaxDefinition\</a\>s, including their \<a href=\"/show?concept=Disambiguation\"\>Disambiguation\</a\>s, to try and determine which ambiguities it contains. \n","","","",{}," Static detection of ambiguity is not decidable, nevertheless \<a href=\"/show?concept=AmbiDexter\"\>AmbiDexter\</a\> does a fine job at finding them. \n \<br/\>\n\<br/\>\n\n \<warning\>[AmbiDexter] is now a separate commandline tool which still needs integration\</warning\>",""," \<ul\>\<li\> \<a href=\"/show?concept=AmbiDexter\"\>AmbiDexter\</a\> can find ambiguity for you before testing the parser, after which you can use \<a href=\"/show?concept=DrAmbiguity\"\>DrAmbiguity\</a\> to explain it. \</li\>\n\</ul\>"," \<ul\>\<li\> \<a href=\"/show?concept=AmbiDexter\"\>AmbiDexter\</a\> is not a silver bullet. It has a time-limit to stop after having searcher only so much of a language. After the time limit has expired, your \<a href=\"/show?concept=SyntaxDefinition\"\>SyntaxDefinition\</a\> may still contain \<a href=\"/show?concept=Ambiguity\"\>Ambiguity\</a\>.\</li\>\n\</ul\>",[])
concept("Throw",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Throw/Throw.concept|,[],[],{"Language"},{"Exception","TryCatch"},""," \<code\>\n  throw \<i\>Exp\</i\>\n\</code\>\n","","",{"throw"}," A throw statement causes the immediate abortion of the execution of the current function with \<code\>\n  \<i\>Exp\</i\>\n\</code\>\'\\s value as exception value.\n The exception can be caught by a \<a href=\"/show?concept=TryCatch\"\>TryCatch\</a\> statement in the current function or in one of its callers.\n If the exception is not caught, the execution of the Rascal program is terminated. The following rules apply:\n  \<ul\>\n  \<li\> The static type of \<code\>\n    \<i\>Exp\</i\>\n  \</code\> should be \<code\>\n    RuntimeException\n  \</code\>, see \<a href=\"/show?concept=Exception\"\>Exception\</a\>.\</li\>\n  \<li\> The Rascal program may contain data declarations that extend the type \<code\>\n    RuntimeException\n  \</code\>.\</li\>\n  \n\</ul\>","","","",[])
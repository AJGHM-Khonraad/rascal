concept("All",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/All/All.concept|,[],[],{"Language"},{},""," \<code\>\n  all ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\n\</code\>\n"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> ... \</th\>\<th align=\"left\"\> \<code\>\n    all ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n    \<code\>\n      bool\n    \</code\>     \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      bool\n    \</code\>    \n  \</td\>\<td align=\"left\"\>\n     ... \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      bool\n    \</code\>                          \n  \</td\>\</tr\>\n\</table\>","",{",","bool",")","(","all"}," Yields \<code\>\n  true\n\</code\> when all combinations of values of \<code\>\n  \<i\>Exp\</i\>\<sub\>i\</sub\>\n\</code\> are true.\n"," \<pre class=\"screen\"\>\</pre\>\n  Are all integers 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 even?\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>all(int n &lt;- [1 .. 10], n % 2 == 0);\nbool: false\n\</pre\>\n  Are all integers 0, 2, 4, 6, 8, 10 even?\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>all(int n &lt;- [0, 2 .. 10], n % 2 == 0);\nbool: true\n\</pre\>",""," When one of the \<code\>\n  \<i\>Exp\</i\>\<sub\>i\</sub\>\n\</code\> enumerates the elements of an empty list, \<code\>\n  all\n\</code\> always returns \<code\>\n  false\n\</code\>:\n \<pre class=\"screen\"\>\<b\>rascal\>\</b\>all(int n &lt;- [], n &gt; 0);\nbool: false\n\</pre\>",[])
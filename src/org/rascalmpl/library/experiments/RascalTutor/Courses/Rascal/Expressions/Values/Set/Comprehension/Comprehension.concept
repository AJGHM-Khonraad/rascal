Name: Comprehension

Synopsis: A set comprehension generates a set value.

Syntax:
`{ $Exp_1$, $Exp_2$, ... | $Gen_1$, $Gen_2$, ... }`

Types:
| `$Exp_1$` | `$Exp_2$` | ... | `{ $Exp_1$, $Exp_2$, ... | $Gen_1$, $Gen_2$, ... }` |
|:----------|:----------|:----|:-----------------------------------------------------|
| `$T_1$`   | `$T_2$`   | ... | `set[ lub( $T_1$, $T_2$, ... ) ]`                   |

Function:

Details:

Description:
A set comprehension consists of a number of contributing expressions $Exp_1$, $Exp_2$, ... and a number of
generators $Gen_1$, $Gen_2$, $Gen_3$, ... that are evaluated as described in [Expressions/Comprehensions].

Examples:
<screen>
{ N * N | int N <- [0 .. 10]};
{ N * N | int N <- [0 .. 10], N % 3 == 0};
</screen>

Benefits:

Pitfalls:

Questions:


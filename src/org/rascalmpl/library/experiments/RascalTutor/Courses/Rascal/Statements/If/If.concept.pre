concept("If",|std:///experiments/RascalTutor/Courses/Rascal/Statements/If/If.concept|,[],[],{"Language"},{},""," \<ul\>\n  \<li\> \<code\>\n    if ( \<i\>Exp\</i\> ) \<i\>Statement\</i\>;\n  \</code\>\</li\>\n  \<li\> \<code\>\n    if ( \<i\>Exp\</i\> ) \<i\>Statement\</i\>\<sub\>1\</sub\> else \<i\>Statement\</i\>\<sub\>2\</sub\>;\n  \</code\>\</li\>\n  \n\</ul\>"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    if ( \<i\>Exp\</i\> ) \<i\>Statement\</i\>;\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      bool\n    \</code\>  \n  \</td\>\<td align=\"left\"\>\n      \<code\>\n      void\n    \</code\>                     \n  \</td\>\</tr\>\n\</table\> \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Statement\</i\>\<sub\>1\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Statement\</i\>\<sub\>2\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    if ( \<i\>Exp\</i\> ) \<i\>Statement\</i\>\<sub\>1\</sub\> else \<i\>Statement\</i\>\<sub\>2\</sub\>;\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      bool\n    \</code\>  \n  \</td\>\<td align=\"left\"\>\n      \<code\>\n      \<i\>T\</i\>\<sub\>1\</sub\>\n    \</code\>        \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      \<i\>T\</i\>\<sub\>2\</sub\>\n    \</code\>         \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      lub(\<i\>T\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\>)\n    \</code\>                              \n  \</td\>\</tr\>\n\</table\>","",{"if",",",";","bool",")","else","lub","(","void"}," The test \<code\>\n  \<i\>Exp\</i\>\n\</code\> is evaluated and its outcome determines the statement to be executed: \n \<code\>\n  \<i\>Statement\</i\>\<sub\>1\</sub\>\n\</code\> if \<code\>\n  \<i\>Exp\</i\>\n\</code\> yields \<code\>\n  true\n\</code\> and \<code\>\n  \<i\>Statement\</i\>\<sub\>2\</sub\>\n\</code\> otherwise. \n The value of an if-then statement is equal to \<code\>\n  \<i\>Statement\</i\>\n\</code\> when its test is true. Otherwise it is void.\n The value of an if-then-else statement is the value of the statement that was executed.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>if( 3 &gt; 2 ) 30; else 40;\nint: 30\n\<b\>rascal\>\</b\>if( 3 &gt; 2 ) 30;\nint: 30\n\</pre\>\n  An if-then statement yields \<code\>\n  void\n\</code\>  when its test is false\n  (demonstrated by the \<b\>ok\</b\> that is printed by the Rascal system):\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>if( 2 &gt; 3 ) 30;\nok\n\</pre\>","","",[tvQuestion("1",typeOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) 10; else 20;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("2",typeOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) \<C:str\>; else \<D:str\>;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",str()>,<"D",str()>],[],void(),"")),tvQuestion("3",valueOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) 10; else 20;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),""))])
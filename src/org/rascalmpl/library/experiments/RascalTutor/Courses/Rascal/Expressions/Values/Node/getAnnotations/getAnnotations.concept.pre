concept("getAnnotations",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/getAnnotations/getAnnotations.concept|,[" anno declaration on node is broken "],[],{"Library"},{},"","",""," \<code\>\n  map[str,value] getAnnotations(node x)\n\</code\>\n",{}," Retrieve the annnotations of a node value as a map.\n"," \<warning\> anno declaration on node is broken \</warning\> \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import Node;\nok\n\</pre\>\n  Declare a string-valued annotation on nodes, named color:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>anno str node @ color;\nok\n\</pre\>\n  Create a node with two annotations:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>N = setAnnotations(&quot;f&quot;(10, &quot;abc&quot;), (&quot;color&quot; : &quot;red&quot;, &quot;size&quot; : &quot;large&quot;));\nnode: f(10,&quot;abc&quot;)[\n  @color=&quot;red&quot;,\n  @size=&quot;large&quot;\n]\n\</pre\>\n  and retrieve those annotations:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>getAnnotations(N);\nmap[str, value]: (&quot;color&quot;:&quot;red&quot;,&quot;size&quot;:&quot;large&quot;)\n\<b\>rascal\>\</b\>N@color;\nStatic Error: prompt:///:1,0: Undeclared annotation: color on node\n\</pre\>","","",[])
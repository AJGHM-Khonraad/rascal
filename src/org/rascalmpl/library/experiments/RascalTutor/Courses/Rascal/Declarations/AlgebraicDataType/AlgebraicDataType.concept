License: Copyright (c) 2009-2011 CWI
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
Contributors:
* Paul Klint - Paul.Klint@cwi.nl - CWI

Name: AlgebraicDataType

Details:

Categories: Language

Syntax:  `data $Name$ = $Alt_1$ | $Alt_1$ | ... ;`

Types: Introduces the type $Name$ and constructor functions for each alternative.

Function:

Synopsis:

Description:

In ordinary programming languages record types or classes exist to introduce a new type name for a collection of related, 
named, values and to provide access to the elements of such a collection through their name. 

In Rascal, algebraic data types provide this facility. They have to be declared, and
then values can be declared using calls to the declared constructor functions,
see [Constructor].

Examples:
<screen>
// The following data declaration defines the datatype `Bool` that contains various constants (`tt()` and `ff()`
// and constructor functions `conj` and `disj`.
data Bool = tt() | ff() | conj(Bool L, Bool R)  | disj(Bool L, Bool R);
// terms of type `Bool` can be constructed using the defined constructors:
conj(tt(),ff());
</screen>

Benefits:

Pitfalls:

Questions:


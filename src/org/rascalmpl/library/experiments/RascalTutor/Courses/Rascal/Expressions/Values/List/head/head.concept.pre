concept("head",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/head/head.concept|,[],[],{"Library"},{},"","",""," \<ul\>\n  \<li\> \<code\>\n    &amp;T head(list[&amp;T] lst) throws EmptyList\n  \</code\>\</li\>\n  \<li\> \<code\>\n    list[&amp;T] insertAt(list[&amp;T] lst, int n, &amp;T elm) throws IndexOutOfBounds(int index)\n  \</code\>\</li\>\n  \n\</ul\>",{}," \<ul\>\n  \<li\> Returns the first element of a list or throws \<code\>\n    EmptyList\n  \</code\> when the list is empty.\</li\>\n  \<li\> Returns the first \<code\>\n    n\n  \</code\> elements of a list or throws \<code\>\n    IndexOutOfBounds\n  \</code\> when the list is too short.\</li\>\n  \n\</ul\>"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import List;\nok\n\</pre\>\n  Get the first element:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>head([1, 2, 3]);\nint: 1\n\<b\>rascal\>\</b\>head([]);\nUncaught Rascal Exception: prompt:///:1,0: EmptyList()\n    somewhere in: $shell$\n\</pre\>\n  Get the first n elements:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>head([1, 2, 3, 4], 2);\nlist[int]: [1,2]\n\<b\>rascal\>\</b\>head([1, 2, 3, 5], 5);\nUncaught Rascal Exception: prompt:///:1,0: IndexOutOfBounds(4)\n    somewhere in: $shell$\n\</pre\>","","",[])
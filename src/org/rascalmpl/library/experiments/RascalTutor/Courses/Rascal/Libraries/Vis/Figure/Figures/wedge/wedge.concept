License: Copyright (c) 2009-2011 CWI
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
Contributors:
* Paul Klint - Paul.Klint@cwi.nl - CWI

Name: wedge

Details:

Categories: Library

Syntax:

Types:

Function:

`Figure wedge(Figure fig, FProperty props...)`

Synopsis:

Description:
Draw a wedge (a circle segment) using the properties props.
The following properties are relevant:

* [height] determines the outer radius of the enclosing circle.
* [innerRadius] determines the inner radious of the enclosing circle; is 0 by default.
* [fromAngle]: starting angle of wedge
* [toAngle]: end angle of wegde.


Also see [Angles].

An optional nested figure inner may be placed inside the wedge.

The anchor point of a wedge is the middle point of the enclosing circle. This makes it easy to compose
wedges with [overlay].


Examples:

<figure w1.png>
  render(wedge(fromAngle(10), toAngle(90), fillColor("Blue"), height(100), innerRadius(20)));
</figure>
![wedge 1](w1.png)

<figure w2.png>
 render(wedge(fromAngle(10), toAngle(260), fillColor("Red"), height(100), innerRadius(20)));
</figure>
![wedge 2](w2.png)

<figure w3.png>
wedges = [
  wedge(fromAngle(0), toAngle(90), fillColor("blue"), innerRadius(20)),
  wedge(fromAngle(90), toAngle(180), fillColor("green"), innerRadius(20)),
  wedge(fromAngle(180), toAngle(270), fillColor("red"), innerRadius(20)),
  wedge(fromAngle(270), toAngle(360), fillColor("yellow"), innerRadius(20))
];
render(overlay(wedges, height(100)));
</figure>

![wedge 3](w3.png)

<figure w4.png>
wedges = [
  wedge(fromAngle(0), toAngle(90), fillColor("blue"), innerRadius(90)),
  wedge(fromAngle(90), toAngle(180), fillColor("green"), innerRadius(90)),
  wedge(fromAngle(180), toAngle(270), fillColor("red"), innerRadius(90)),
  wedge(fromAngle(270), toAngle(360), fillColor("yellow"), innerRadius(90))
];
render(overlay(wedges, height(100)));
</figure>

![wedge 4](w4.png)

<figure w5.png>
wedges = [
  wedge(fromAngle(0), toAngle(90), fillColor("blue"), innerRadius(90)),
  wedge(fromAngle(90), toAngle(180), fillColor("green"), innerRadius(90)),
  wedge(fromAngle(180), toAngle(270), fillColor("red"), innerRadius(90)),
  wedge(fromAngle(270), toAngle(360), fillColor("yellow"), innerRadius(90)),
  wedge(fromAngle(0), toAngle(90), fillColor("lightblue"), height(80), innerRadius(70)),
  wedge(fromAngle(90), toAngle(180), fillColor("lightgreen"), height(80), innerRadius(70)),
  wedge(fromAngle(180), toAngle(270), fillColor("lightcoral"), height(80), innerRadius(70)),
  wedge(fromAngle(270), toAngle(360), fillColor("lightyellow"), height(80), innerRadius(70))
];
render(overlay(wedges, height(100)));
</figure>

![wedge 5](w5.png)

Benefits:

Pitfalls:

Questions:


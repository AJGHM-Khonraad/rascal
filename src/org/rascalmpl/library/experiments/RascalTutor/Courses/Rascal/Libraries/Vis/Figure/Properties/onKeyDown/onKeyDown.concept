Name: onKeyDown

Details:

Syntax:

Types:

Function: FProperty onKeyDown (bool (KeySym key, map[KeyModifier,bool] modifiers) cb)

Synopsis: Execute callback when a key is pressed.

Description: This property allows you to install a handler for keypresses. When the mouse is over the figure (i.e. the figure has focus) and a key is pressed then the callback `cb` will be called. This callback takes two arguments

* `KeySym key` the key that is pressed, described by a [KeySym].
* `map[KeyModifier,bool]` a map that indicates which modifier keys (Control, Alt, Super) are currently held down. Modifier keys are described by [KeyModifier].

The callback returns a `bool` which indicates if the event is captured. Keyhandlers are executed deepest-figure first, if the keypress is caputured then the keypress is not propagated further so figures below (less deep) than this figure will not recieve a keypress.

Examples:

<figure onkeydown.png 300x300>
import vis::KeySym;
s = "";
s2 = "";
b = box(text(str () { return s; }),
	fillColor("red"),
	onKeyDown(bool (KeySym key, map[KeyModifier,bool] modifiers) {
		s = "<key>";
		return true;
	}));
b2 = box(vcat([
	text(str () { return s2; }),
	b],shrink(0.7)),
	fillColor("green"),
	onKeyDown(bool (KeySym key, map[KeyModifier,bool] modifiers) {
		s2 = "<key>";
		return true;
	}));
render(b2);
</figure>
![onkeydown](onkeydown.png)


Benefits: 

Pitfalls: Unfortunatly we cannot show an interactive version here, try it out in Rascal yourself.

Questions:

       

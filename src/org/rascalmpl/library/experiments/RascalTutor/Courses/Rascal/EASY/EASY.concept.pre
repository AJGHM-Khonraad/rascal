concept("EASY",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/EASY/EASY.concept|,[],[],{},{},"","","","",{},"\<img width=\"300px\" height=\"300px\" align=\"right\"  alt=\"Easy Wokflow\" src=\"Courses/Rascal/EASY/easy-workflow.png\"\>\nMany meta-programming problems follow a fixed pattern. \nStarting with some input system (a black box that we usually call \<i\>system-of-interest\</i\>), \nfirst relevant information is extracted from it and stored in an internal representation. \nThis internal representation is then analyzed and used to synthesize results.\n If the synthesis indicates this, these steps can be repeated over and over again. These steps are shown in the following figure.\nThis is an abstract view on solving meta-programming problems, but is rather common.\n\nWe give some typical use cases in the details.\n","","","",[])
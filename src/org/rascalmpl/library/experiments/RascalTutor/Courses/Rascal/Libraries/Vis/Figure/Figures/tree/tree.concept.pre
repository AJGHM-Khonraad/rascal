concept("tree",|cwd:/src/org/rascalmpl/library/experiments/RascalTutor/Courses//Rascal/Libraries/Vis/Figure/Figures/tree/tree.concept|,[],[],{"Library"},{"id"},"","",""," \<ol\>\<li\> \<code\>Figure tree(Figures nodes, list[Edge] edges)\</code\>\</li\>\n\<li\> \<code\>Figure tree(FProperties, Figures nodes, list[Edge] edges)\</code\>\</li\>\n\</ol\>",{}," \<code\>tree\</code\> takes a list of nodes and a list of edges and draws a tree.\n The nodes can be arbitrary figures that should have a name (using the \<a href=\"/show?concept=id\"\>id\</a\> property).\n The edges determine connections between named nodes.\n \<br/\>\n\<br/\>\n\n The following constraints apply:\n \<ol\>\<li\> All nodes should have an \<code\>id\</code\> property with a unique value.\</li\>\n\<li\> All edges should refer to \<code\>id\</code\>s that are defined by the nodes.\</li\>\n\<li\> The nodes and edges should form a tree, i.e., a single rooted, acyclic graph.\</li\>\n\</ol\>"," \<pre class=\"listing\"\>nodes = [ box([id(\"A\"), fillColor(\"green\")]),\n     \t  box([id(\"B\"), fillColor(\"red\")]),\n     \t  box([id(\"C\"), fillColor(\"blue\")])\n     \t];\nedges = [ edge(\"A\", \"B\"),\n          edge(\"A\", \"C\")\n    \t];\nrender(tree([gap(20), size(50)], nodes, edges));\n\</pre\> \<img  alt=\"tree 1\" src=\"Courses//Rascal/Libraries/Vis/Figure/Figures/tree/t1.png\"\>\n \<br/\>\n\<br/\>\n\n \<pre class=\"listing\"\>nodes = [ ellipse([id(\"A\"), size(30), fillColor(\"green\")]),\n     \t  ellipse([id(\"B\"), size(45), fillColor(\"red\")]),\n     \t  ellipse([id(\"C\"), size(60), fillColor(\"blue\")]),\n     \t  ellipse([id(\"D\"), size(75), fillColor(\"purple\")]),\n     \t  ellipse([id(\"E\"), size(90), fillColor(\"lightblue\")]),\n     \t  box([id(\"F\"), size(30), fillColor(\"orange\")]),\n     \t  box([id(\"G\"), size(30), fillColor(\"brown\")]),\n     \t  box([id(\"H\"), size(30), fillColor(\"black\")]),\n     \t  box([id(\"I\"), size(30), fillColor(\"grey\")]),\n     \t  ellipse([id(\"J\"), size(30), fillColor(\"white\")])\n     \t];\nedges = [ edge(\"A\", \"B\"),\n    \t  edge(\"B\", \"C\"),\n    \t  edge(\"B\", \"D\"),\n    \t  edge(\"A\", \"E\"),\n    \t  edge(\"A\", \"H\"),\n    \t  edge(\"E\", \"F\"),\n    \t  edge(\"E\", \"G\"),\n    \t  edge(\"E\", \"I\"),\n    \t  edge(\"E\", \"J\")\n    \t];\t    \nrender(tree([gap(30)], nodes, edges));\n\</pre\> \<img  alt=\"tree 2\" src=\"Courses//Rascal/Libraries/Vis/Figure/Figures/tree/t2.png\"\>\n","","",[])
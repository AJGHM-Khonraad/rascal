<<<<<<< .mine
concept("takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/takeOneFrom/takeOneFrom.concept|,[],[],{},"","",""," \<code\>tuple[&amp;T, set[&amp;T]] takeOneFrom(set[&amp;T] s)\</code\>\n",{}," Remove an arbitrary element from set \<code\>s\</code\> and return a tuple consisting of the element and the modified set.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import Set;\nok\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;2,{4,3,1}&gt;\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;4,{3,2,1}&gt;\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;1,{4,3,2}&gt;\n\</pre\>","","",[])=======
concept("takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/takeOneFrom/takeOneFrom.concept|,[],[],{"Library"},{},"","",""," \<code\>tuple[&amp;T, set[&amp;T]] takeOneFrom(set[&amp;T] s)\</code\>\n",{}," Remove an arbitrary element from set \<code\>s\</code\> and return a tuple consisting of the element and the modified set.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import Set;\nok\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;4,{3,2,1}&gt;\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;1,{4,3,2}&gt;\n\<b\>rascal\>\</b\>takeOneFrom({1, 2, 3, 4});\ntuple[int,set[int]]: &lt;1,{4,3,2}&gt;\n\</pre\>","","",[])>>>>>>> .r36072

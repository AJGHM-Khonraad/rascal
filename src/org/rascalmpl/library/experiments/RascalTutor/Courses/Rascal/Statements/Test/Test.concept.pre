concept("Test",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Statements/Test/Test.concept|,[],[],{"Language"},{},"","\<ol\>\n\<li\> \<code\>test \<i\>Exp\</i\>\<sub\>1\</sub\>\</code\>\</li\>\n\<li\> `test \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> : \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\>\</li\>\n\n\</ol\>\n","\<table\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> \</th\>\</tr\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<td\> \<code\>bool\</code\>    \</td\>\<td\> \<code\>str\</code\>     \</td\>\</tr\>\</table\>","",{"bool","test","str"},"A test statement forms the basis for Rascal\'\\s unit-testing framework and may occur everywhere where a declaration is allowed.\nwhere \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> is a boolean-value expression and \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> is an optional string-valued expression that \nserves as a identifying message for this test.\n\nDuring normal execution tests are ignored and the test statement has no affect. \nWhen the script is executed as a test suite all tests in the current module and all \nits imported modules are executed and a summary of succeeded/failed tests is shown to the user.\n\nThere are two ways to execute as test suite:\n\n\<ul\>\n\<li\> By executing the \<code\>:test\</code\> directive of the Rascal shell, or\</li\>\n\<li\>  by setting the option \<code\>rascal.options.testsuite\</code\> (not yet implemented).\</li\>\n\n\</ul\>\n","\<pre class=\"screen\"\>\</pre\>\nFirst observe how a failing test is ignored during standard execution:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>test 1==2;\nok\n\</pre\>\n Next we execute it via the test framework:   \n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>:test           \nprompt:///:1,0:failed  : test 1==2\n0 of 1 tests succeeded\n1 of 1 tests failed\nbool: false\n\</pre\>","","",[])
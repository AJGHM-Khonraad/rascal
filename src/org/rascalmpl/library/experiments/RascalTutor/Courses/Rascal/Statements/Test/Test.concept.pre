concept("Test",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Test/Test.concept|,[],[],{"Language"},{},""," \<ol\>\n  \<li\> \<code\>\n    test \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\>\</li\>\n  \<li\> `test \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\> : \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\>\</li\>\n  \n\</ol\>"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      bool\n    \</code\>    \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      str\n    \</code\>     \n  \</td\>\</tr\>\n\</table\>","",{"bool","test","str"}," A test statement forms the basis for Rascal\'\\s unit-testing framework and may occur everywhere where a declaration is allowed.\n where \<code\>\n  \<i\>Exp\</i\>\<sub\>1\</sub\>\n\</code\> is a boolean-value expression and \<code\>\n  \<i\>Exp\</i\>\<sub\>2\</sub\>\n\</code\> is an optional string-valued expression that \n serves as a identifying message for this test.\n \<br/\>\n\<br/\>\n\n During normal execution tests are ignored and the test statement has no affect. \n When the script is executed as a test suite all tests in the current module and all \n its imported modules are executed and a summary of succeeded/failed tests is shown to the user.\n \<br/\>\n\<br/\>\n\n There are two ways to execute as test suite:\n  \<ul\>\n  \<li\> By executing the \<code\>\n    :test\n  \</code\> directive of the Rascal shell, or\</li\>\n  \<li\>  by setting the option \<code\>\n    rascal.options.testsuite\n  \</code\> (not yet implemented).\</li\>\n  \n\</ul\>"," \<pre class=\"screen\"\>\</pre\>\n First observe how a failing test is ignored during standard execution:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>test 1==2;\nParse error in prompt:/// from &lt;1,5&gt; to &lt;1,5&gt;\n\</pre\>\n  Next we execute it via the test framework:   \n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>:test           \n0 of 0 tests succeeded\n0 of 0 tests failed\nbool: true\n\</pre\>","","",[])
concept("Java",|std:///experiments/RascalTutor/Courses//Rascal/Libraries/Java/Java.concept|,[],[],{"Library","Eclipse"},{}," \<pre class=\"listing\"\>data Entity = entity(list[Id] id);\n\ndata Id = \n       package(str name)\n     | class(str name)\n     | class(str name, list[Entity] params)\n     | interface(str name)\n     | interface(str name, list[Entity] params)\n     | anonymousClass(int nr)\n     | enum(str name)\n        \n     | method(str name, list[Entity] params, Entity returnType)\n     | constr(list[Entity] params)\n     | initializer()\n     | initializer(int nr)\n\n     | field(str name)\n     | parameter(str name)\n     | variable(str name, int id)\n     | enumConstant(str name)\n     \n     | primitive(PrimitiveType primType)\n     | array(Entity elementType)\n     \n     | typeParameter(str name)\n     | wildcard()\n     | wildcard(Bound bound)\n     ;\n\n\npublic Entity Object = entity([package(\"java\"), package(\"lang\"), class(\"Object\")]);\n\n\ndata PrimitiveType = \n       byte()\n     | short()\n     | \\int()        \<img src=\"images/1.png\"\>\n     | long()\n     | float()\n     | double()\n     | char()\n     | boolean()\n     | \\void()       \<img src=\"images/1.png\"\>\n     | null()\n     ;\n\ndata Bound = \n       extends(Entity extended)\n     | super(Entity super)\n     ;\n\ndata Modifier = \n       \\public()     \<img src=\"images/1.png\"\>\n     | protected()\n     | \\private()    \<img src=\"images/1.png\"\>\n     | static()\n     | abstract()\n     | final()\n     | native()\n     | synchronized()\n     | transient()\n     | volatile()\n     | strictfp()\n     | deprecated() \n     ;\n\</pre\> Note (\<img src=\"images/1.png\"\>) how various Rascal keywords like \<code\>int\</code\> and \<code\>public\</code\> have to be escaped.\n","","","",{}," This module provides a data model for facts that are extracted from Java source code.\n The Java constructs that may occur in extracted facts are represented by the datatype \<code\>Entity\</code\>. \n An \<code\>Entity\</code\> represents a fully qualified identifier (represented by a list of \<code\>Id\</code\>s) pointing to a \n very specific part of a Java source code file. \n Entity is therefore a nested data-type.\n \<br/\>\n\<br/\>\n\n \<code\>Id\</code\>s are parts of java source code that have a name. They are used to construct unique entity names.\n \<br/\>\n\<br/\>\n\n The Entity \<code\>Object\</code\> is the root of Java\'\\s type hierarchy.\n \<br/\>\n\<br/\>\n\n \<code\>PrimitiveType\</code\> represents the primitive types of Java.\n \<br/\>\n\<br/\>\n\n \<code\>Bound\</code\> represents the relations between Java classes and interfaces.\n \<br/\>\n\<br/\>\n\n \<code\>Modifier\</code\> represents possible modifiers of Java entities.\n","",""," This module is only available in the Eclipse version of Rascal.\n",[])
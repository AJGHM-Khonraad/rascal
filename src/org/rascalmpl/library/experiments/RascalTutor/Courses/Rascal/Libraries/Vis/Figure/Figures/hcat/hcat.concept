Name: hcat

Details:

Categories: Library

Syntax:

Types:

Function:
`Figure hcat(Figures figs, FProperty props...)`

Synopsis:

Description: Horizontal composition of a list of figures.
By default, all figures are vertically aligned but all vertical alignment properties can overrule this.

When a horizontal gap property is available, this will be used as gap between the figures.

Examples:
<figure h1.png>
b1 = box(size(50,100), resizable(false), fillColor("Red"));
b2 = box(size(80,20),  resizable(false), fillColor("Blue"));
render(hcat([b1, b2]));
</figure>
gives: ![h1](h1.png)

`b2` aligned at the top:
<figure h2.png>
b1 = box(size(50,100), resizable(false), fillColor("Red"));
b2 = box(size(80,20), resizable(false), fillColor("Blue"), top());
render(hcat([b1, b2]));
</figure>
gives: ![h2](h2.png)

`b2` aligned at the bottom:
<figure h3.png>
b1 = box(size(50,100), resizable(false), fillColor("Red"));
b2 = box(size(80,20), resizable(false), fillColor("Blue"), bottom());
render(hcat([b1, b2]));
</figure>
gives: ![h3](h3.png)

When a property has to be set for several child figures it is convenient to
redefine the standard value (using [std]) of a properties:
<figure h4.png>
b1 = box(size(50,100), resizable(false), fillColor("Red"));
b2 = box(size(80,20), resizable(false), fillColor("Blue"));
b3 = box(size(80,20), resizable(false), fillColor("Yellow"));
render(hcat([b1, b2, b3], std(bottom()), hgap(50)));
</figure>
gives: ![h4](h4.png)

<warning>
What is wrong with the above hgap?
</warning>


Benefits:

Pitfalls:

Questions:


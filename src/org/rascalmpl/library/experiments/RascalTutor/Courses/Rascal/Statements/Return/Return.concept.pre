concept("Return",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Statements/Return/Return.concept|,[],[],{"Language"},{},"","\<ol\>\n\<li\> \<code\>return;\</code\>\</li\>\n\<li\> \<code\>return \<i\>Exp\</i\>\</code\>\</li\>\n\n\</ol\>\n","","",{";","return"},"A return statement comes in two variants: without and with an expreesion,\nboth variants end the execution of the current function. \nThe first variant applies to functions with \<code\>void\</code\> as return type. \nThe second variants applies to non-void functions and returns the value of \<code\>\<i\>Exp\</i\>\</code\> as result of the function invocation.\nThe following rules apply:\n\n\<ul\>\n\<li\> The static type of \<code\>\<i\>Exp\</i\>\</code\> should be compatible with the declared return type of the function in    which the return statement occurs.\</li\>\n\<li\> In each function with a return type that is not void, every possible execution path through the body of    the function should end in a return statement.\</li\>\n\n\</ul\>\nIn each function with a return type that is void, a return statement is implicitly assumed at the end of each execution path through the function body.\n","","","",[])
concept("ColorModel",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/ColorModel.concept|,[],[],{"Library"},{"lineColor","rgb","fontColor","gray","color","fillColor"},"",""," \<code\>alias Color = int;\</code\>\n","",{"int","=",";","Color","alias"}," A color is expressed in the RGB color space and consists of a red, green and blue\n ingredient; each can have a value in the range [0-255].\n In addition, colors can have a transparency, expressed as a percentage\n between 0.0 (completely opaque) and 1.0 (completely transparent).\n One can also refer to colors by name. The full range of\n \<a href=\"http://en.wikipedia.org/wiki/Web_colors#X11_color_names\"\>X11/HTML Colors\</a\>\n is supported.\n \<br/\>\n\<br/\>\n\n A color can be constructed using:\n \<ul\>\<li\> the integer value of the color\</li\>\n\<li\> the \<a href=\"/show?concept=rgb\"\>rgb\</a\> function that combines the red, green and blue ingredient into an integer representation of the color.\</li\>\n\<li\> the \<a href=\"/show?concept=color\"\>color\</a\> function that maps color names to color values.\</li\>\n\<li\> the \<a href=\"/show?concept=gray\"\>gray\</a\> function that creates gray scale values.\</li\>\n\</ul\> The following properties use colors:\n \<ul\>\<li\> \<a href=\"/show?concept=lineColor\"\>lineColor\</a\>: sets the color of lines and borders.\</li\>\n\<li\> \<a href=\"/show?concept=fillColor\"\>fillColor\</a\>: sets the color for filling the inside of a figure.\</li\>\n\<li\> \<a href=\"/show?concept=fontColor\"\>fontColor\</a\>: sets the color for text.\</li\>\n\</ul\> all these properties accept a Color value or, for convenience, also a color name.\n"," \<pre class=\"listing\"\>b1 = box([size(50), fillColor(\"MidNightBlue\")]);\nrender(b1);\n\</pre\> displays: \<img  title=\"b1\" alt=\"b1\" src=\"Courses/Rascal/Libraries/Vis/Figure/ColorModel/b1.png\"\>\n \<br/\>\n\<br/\>\n\n We can also use the RGB value of MidNightBlue directly\n \<pre class=\"listing\"\>b2 = box([size(50), fillColor(rgb(25,25,112))]);\nrender(b2);\n\</pre\> and obtain (unsurprisingly) the same result: \<img  title=\"b2\" alt=\"b2\" src=\"Courses/Rascal/Libraries/Vis/Figure/ColorModel/b2.png\"\>\n","","",[])
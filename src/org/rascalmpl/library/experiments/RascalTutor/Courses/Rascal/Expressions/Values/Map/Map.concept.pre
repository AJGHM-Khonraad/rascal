concept("Map",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Map.concept|,[],{"Language"},{},"","\<code\>( \<i\>KeyExp\</i\>\<sub\>1\</sub\> : \<i\>ValExp\</i\>\<sub\>1\</sub\>, \<i\>KeyExp\</i\>\<sub\>2\</sub\> : \<i\>ValExp\</i\>\<sub\>2\</sub\>, ... )\</code\>\n","\<table\>\<tr\>\<th align=\"left\"\> \<code\>\<i\>KeyExp\</i\>\<sub\>1\</sub\>\</code\> \</th\>\<th align=\"left\"\> \<code\>\<i\>ValExp\</i\>\<sub\>1\</sub\>\</code\> \</th\>\<th align=\"left\"\> \<code\>\<i\>KeyExp\</i\>\<sub\>2\</sub\>\</code\> \</th\>\<th align=\"left\"\> \<code\>\<i\>ValExp\</i\>\<sub\>2\</sub\>\</code\> \</th\>\<th align=\"left\"\> ... \</th\>\<th align=\"left\"\> \<code\>( \<i\>KeyExp\</i\>\<sub\>1\</sub\> : \<i\>ValExp\</i\>\<sub\>1\</sub\>, \<i\>KeyExp\</i\>\<sub\>2\</sub\> : \<i\>ValExp\</i\>\<sub\>2\</sub\>, ... )\</code\> \</th\>\</tr\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<td\> \<code\>\<i\>TK\</i\>\<sub\>1\</sub\>\</code\>     \</td\>\<td\>  \<code\>\<i\>TV\</i\>\<sub\>1\</sub\>\</code\>    \</td\>\<td\>  \<code\>\<i\>TK\</i\>\<sub\>2\</sub\>\</code\>    \</td\>\<td\> \<code\>\<i\>TV\</i\>\<sub\>2\</sub\>\</code\>     \</td\>\<td\> ... \</td\>\<td\> \<code\>map[lub(\<i\>TK\</i\>\<sub\>1\</sub\>, \<i\>TK\</i\>\<sub\>2\</sub\>, ...), lub(\<i\>TV\</i\>\<sub\>1\</sub\>, \<i\>TV\</i\>\<sub\>2\</sub\>, ...)]\</code\> \</td\>\</tr\>\</table\>","",{"...",",",":","map[lub",")","lub","(","...)]","...),"},"A map is a set of key : value pairs and has the following properties:\n\n\<ul\>\n\<li\> Key and value may have different static types.\</li\>\n\<li\> A key can only occur once.\<br/\>\n\<br/\>\nMaps are represented by the type map[T1, T2], where T1 and T2 are arbitrary types. Examples are map[int,int], and map[str,int]. Maps are denoted by a list of pairs, separated by comma\'\\s and enclosed in parentheses as in (K1: V1, ..., Kn: Vn), where the Kn (1 &lt;= i&lt;= n) are expressions that yield the keys of the map and Vn (1 &lt;= i&lt;= n) are expressions that yield the values for each key. Maps resemble functions rather than relations in the sense that only a single value can be associated with each key. \</li\>\n\n\</ul\>\n","\<pre class=\"screen\"\>\<b\>rascal\>\</b\>(&quot;pear&quot; : 1, &quot;apple&quot; : 3, &quot;banana&quot; : 0);\nmap[str, int]: (\"apple\":3,\"pear\":1,\"banana\":0)\n\</pre\>","","",[])
course("Rascal",["\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Patterns/Patterns.html\"\>Patterns\</a\>/\<a href=\"/Courses/Rascal/Patterns/Abstract/Abstract.html\"\>Abstract\</a\>/\<a href=\"/Courses/Rascal/Patterns/Abstract/TypeConstrained/TypeConstrained.html\"\>TypeConstrained\</a\>:  add example","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/GreaterThan/GreaterThan.html\"\>GreaterThan\</a\>: Rascal implementation: broken","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/GreaterThan/GreaterThan.html\"\>GreaterThan\</a\>: Static Error: prompt:///:1,0: \> not supported on value and valueStatic Error: prompt:///:1,0: \> not supported on value and value","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Patterns/Patterns.html\"\>Patterns\</a\>/\<a href=\"/Courses/Rascal/Patterns/Abstract/Abstract.html\"\>Abstract\</a\>/\<a href=\"/Courses/Rascal/Patterns/Abstract/TypedLabelled/TypedLabelled.html\"\>TypedLabelled\</a\>:  add example","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/GreaterThanOrEqual/GreaterThanOrEqual.html\"\>GreaterThanOrEqual\</a\>: Rascal implementation: broken","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/GreaterThanOrEqual/GreaterThanOrEqual.html\"\>GreaterThanOrEqual\</a\>: Static Error: prompt:///:1,0: \>= not supported on value and valueStatic Error: prompt:///:1,0: \>= not supported on value and value","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Libraries/Libraries.html\"\>Libraries\</a\>/\<a href=\"/Courses/Rascal/Libraries/Vis/Vis.html\"\>Vis\</a\>/\<a href=\"/Courses/Rascal/Libraries/Vis/Figure/Figure.html\"\>Figure\</a\>/\<a href=\"/Courses/Rascal/Libraries/Vis/Figure/Properties/Properties.html\"\>Properties\</a\>/\<a href=\"/Courses/Rascal/Libraries/Vis/Figure/Properties/fontNames/fontNames.html\"\>fontNames\</a\>: Uncaught Rascal Exception: prompt:///:1,0: Java(\"Invalid thread access\")","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Declarations/Declarations.html\"\>Declarations\</a\>/\<a href=\"/Courses/Rascal/Declarations/Tag/Tag.html\"\>Tag\</a\>: To be provided","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/LessThanOrEqual/LessThanOrEqual.html\"\>LessThanOrEqual\</a\>: Rascal implementation: broken","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/LessThanOrEqual/LessThanOrEqual.html\"\>LessThanOrEqual\</a\>: Static Error: prompt:///:1,0: \<= not supported on value and valueStatic Error: prompt:///:1,0: \<= not supported on value and value","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Declarations/Declarations.html\"\>Declarations\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/SyntaxDefinition.html\"\>SyntaxDefinition\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDiagnosis/AmbiguityDiagnosis.html\"\>AmbiguityDiagnosis\</a\>: Reference to unknown course or concept: Rascal:DrAmbiguity","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/LessThan/LessThan.html\"\>LessThan\</a\>: Rascal implementation: broken","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Expressions/Expressions.html\"\>Expressions\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Values.html\"\>Values\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/Value.html\"\>Value\</a\>/\<a href=\"/Courses/Rascal/Expressions/Values/Value/LessThan/LessThan.html\"\>LessThan\</a\>: Static Error: prompt:///:1,0: \< not supported on value and valueStatic Error: prompt:///:1,0: \< not supported on value and value","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Declarations/Declarations.html\"\>Declarations\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/SyntaxDefinition.html\"\>SyntaxDefinition\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDetection/AmbiguityDetection.html\"\>AmbiguityDetection\</a\>: Referencetounknowncourseorconcept:Rascal:DrAmbiguity","\<a href=\"/Courses/Rascal/Rascal.html\"\>Rascal\</a\>/\<a href=\"/Courses/Rascal/Declarations/Declarations.html\"\>Declarations\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/SyntaxDefinition.html\"\>SyntaxDefinition\</a\>/\<a href=\"/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDetection/AmbiguityDetection.html\"\>AmbiguityDetection\</a\>: Referencetounknowncourseorconcept:Rascal:Ambiguity"],("Rascal/Declarations/Import":concept("Rascal/Declarations/Import",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Import/Import.concept|,[],[],{";","import"},[]),"Rascal/Libraries/Vis/Figure/Properties/id":concept("Rascal/Libraries/Vis/Figure/Properties/id",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/id/id.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean":concept("Rascal/Expressions/Values/Boolean",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Boolean.concept|,[],[],{"true",";","bool","Boolean","import","false"},[]),"Rascal/Libraries":concept("Rascal/Libraries",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Libraries.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/Equal":concept("Rascal/Expressions/Values/Set/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Equal/Equal.concept|,[],[],{"]","[","bool","set","=="},[tvQuestion("Rascal/Expressions/Values/Set/Equal","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> == \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Properties/shapeClosed":concept("Rascal/Libraries/Vis/Figure/Properties/shapeClosed",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shapeClosed/shapeClosed.concept|,[],[],{},[]),"Rascal/Concepts/Enumerators/EquationSolving":concept("Rascal/Concepts/Enumerators/EquationSolving",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Enumerators/EquationSolving/EquationSolving.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/tail":concept("Rascal/Expressions/Values/List/tail",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/tail/tail.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/toSet":concept("Rascal/Expressions/Values/List/toSet",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/toSet/toSet.concept|,[],[],{},[]),"Rascal/Declarations/Function":concept("Rascal/Declarations/Function",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Function/Function.concept|,[],[],{"}","=","|","...)","{",";","(\"","\")?","test","throws",",",")","public","(","private","\"","java","default"},[]),"Rascal/Libraries/Scripting/evalType":concept("Rascal/Libraries/Scripting/evalType",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Scripting/evalType/evalType.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/endsWith":concept("Rascal/Expressions/Values/String/endsWith",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/endsWith/endsWith.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/SubMap":concept("Rascal/Expressions/Values/Map/SubMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/SubMap/SubMap.concept|,[],[],{"]",",","map","[","bool","\<="},[]),"Rascal/Declarations/Alias":concept("Rascal/Declarations/Alias",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Alias/Alias.concept|,[],[],{"=",";","alias"},[]),"Rascal/Expressions/Values/Relation/carrierX":concept("Rascal/Expressions/Values/Relation/carrierX",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/carrierX/carrierX.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/Difference":concept("Rascal/Expressions/Values/Set/Difference",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Difference/Difference.concept|,[],[],{"]","-",",","[","lub","(",")]","set"},[choiceQuestion("Rascal/Expressions/Values/Set/Difference","1","  When you compute the difference of two sets, the number of elements in the result is always:\n",[good("Smaller than or equal the number of elements in the first set."),bad("Greater than the number of elements in both sets."),bad("Greater than or equal the number of elements in the first set."),bad("Smaller than the number of elements in both sets.")]),tvQuestion("Rascal/Expressions/Values/Set/Difference","2",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Difference","3",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> - \<A:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"A",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Difference","4",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> - \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Properties/mouseOver":concept("Rascal/Libraries/Vis/Figure/Properties/mouseOver",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/mouseOver/mouseOver.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/findAll":concept("Rascal/Expressions/Values/String/findAll",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/findAll/findAll.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/vscrollable":concept("Rascal/Libraries/Vis/Figure/Figures/vscrollable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/vscrollable/vscrollable.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/GreaterThan":concept("Rascal/Expressions/Values/DateTime/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/GreaterThan/GreaterThan.concept|,[],[],{"\>","datetime","bool"},[]),"Rascal/Libraries/Vis/Figure/Properties/shapeCurved":concept("Rascal/Libraries/Vis/Figure/Properties/shapeCurved",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shapeCurved/shapeCurved.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/Subscription":concept("Rascal/Expressions/Values/List/Subscription",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Subscription/Subscription.concept|,[],[],{"int","list","]","["},[]),"Rascal/Libraries/ParseTree/parse":concept("Rascal/Libraries/ParseTree/parse",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ParseTree/parse/parse.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/carrierR":concept("Rascal/Expressions/Values/Relation/carrierR",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/carrierR/carrierR.concept|,[],[],{},[]),"Rascal/Expressions/Values/Tuple/Equal":concept("Rascal/Expressions/Values/Tuple/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/Equal/Equal.concept|,[],[],{"]",",","[","bool","tuple","=="},[]),"Rascal/Libraries/Vis/Figure/Figures/fswitch":concept("Rascal/Libraries/Vis/Figure/Figures/fswitch",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/fswitch/fswitch.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/replaceAll":concept("Rascal/Expressions/Values/String/replaceAll",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/replaceAll/replaceAll.concept|,[],[],{},[]),"Rascal/Libraries/Exception":concept("Rascal/Libraries/Exception",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Exception/Exception.concept|,[],[],{},[]),"Rascal/Concepts/Enumerators":concept("Rascal/Concepts/Enumerators",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Enumerators/Enumerators.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Match":concept("Rascal/Expressions/Values/Boolean/Match",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Match/Match.concept|,[],[],{"bool",":=","value"},[]),"Rascal/Libraries/Vis/Figure/Properties/onMouseExit":concept("Rascal/Libraries/Vis/Figure/Properties/onMouseExit",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onMouseExit/onMouseExit.concept|,[],[],{},[]),"Rascal/Libraries/JDT/extractClass":concept("Rascal/Libraries/JDT/extractClass",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/extractClass/extractClass.concept|,[],[],{},[]),"Rascal/Libraries/Graph/predecessors":concept("Rascal/Libraries/Graph/predecessors",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/predecessors/predecessors.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hgrow":concept("Rascal/Libraries/Vis/Figure/Properties/hgrow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hgrow/hgrow.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/LessThan":concept("Rascal/Expressions/Values/DateTime/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/LessThan/LessThan.concept|,[],[],{"\<","datetime","bool"},[]),"Rascal/Libraries/Graph/reach":concept("Rascal/Libraries/Graph/reach",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/reach/reach.concept|,[],[],{},[]),"Rascal/Concepts/Visiting":concept("Rascal/Concepts/Visiting",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Visiting/Visiting.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/StrictSuperMap":concept("Rascal/Expressions/Values/Map/StrictSuperMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/StrictSuperMap/StrictSuperMap.concept|,[],[],{"\>","]",",","map","[","bool"},[]),"Rascal/Expressions/Values/Relation":concept("Rascal/Expressions/Values/Relation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Relation.concept|,[],[],{"\>","]","}",",","\<","[","{","rel"},[]),"Rascal/Libraries/Vis/Figure/Properties/hsize":concept("Rascal/Libraries/Vis/Figure/Properties/hsize",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hsize/hsize.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/toInt":concept("Rascal/Expressions/Values/String/toInt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/toInt/toInt.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node/getName":concept("Rascal/Expressions/Values/Node/getName",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/getName/getName.concept|,[],[],{},[]),"Rascal/Libraries/ValueIO/readBinaryValueFile":concept("Rascal/Libraries/ValueIO/readBinaryValueFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/readBinaryValueFile/readBinaryValueFile.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation/Preceed":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation/Preceed",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Preceed/Preceed.concept|,[],[],{"!\<\<","\<\<"},[]),"Rascal/Libraries/Vis/Render":concept("Rascal/Libraries/Vis/Render",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Render/Render.concept|,[],[],{";","Render","import","vis","::"},[]),"Rascal/Expressions/Values/List/size":concept("Rascal/Expressions/Values/List/size",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/size/size.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/carrier":concept("Rascal/Expressions/Values/Relation/carrier",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/carrier/carrier.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/TransitiveClosure":concept("Rascal/Expressions/Values/Relation/TransitiveClosure",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/TransitiveClosure/TransitiveClosure.concept|,[],[],{"]",",","+","[","rel"},[]),"Rascal/Expressions/Values/Map/range":concept("Rascal/Expressions/Values/Map/range",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/range/range.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value/Conditional":concept("Rascal/Expressions/Values/Value/Conditional",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/Conditional/Conditional.concept|,[],[],{"?",",",":","bool",")","lub","("},[]),"Rascal/Libraries/Vis/Figure/Figures/hscreen":concept("Rascal/Libraries/Vis/Figure/Figures/hscreen",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/hscreen/hscreen.concept|,[],[],{},[]),"Rascal/Libraries/PriorityQueue/mkPriorityQueue":concept("Rascal/Libraries/PriorityQueue/mkPriorityQueue",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/mkPriorityQueue/mkPriorityQueue.concept|,[],[],{},[]),"Rascal/Expressions/Operators/FieldProjection":concept("Rascal/Expressions/Operators/FieldProjection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Operators/FieldProjection/FieldProjection.concept|,[],[],{"\>","\<",","},[]),"Rascal/Expressions/Values/Set/Union":concept("Rascal/Expressions/Values/Set/Union",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Union/Union.concept|,[],[],{"]",",","+","[","lub","(",")]","set"},[choiceQuestion("Rascal/Expressions/Values/Set/Union","1","  When you compute the union of two sets, the number of elements in the result is always:\n",[good("Greater than or equal the number of elements in both sets."),bad("Greater than the number of elements in both sets."),bad("Smaller than the number of elements in both sets."),bad("Smaller than or equal the number of elements in both sets.")]),tvQuestion("Rascal/Expressions/Values/Set/Union","2",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Union","3",valueOfExpr(),details(" ",[],"","","\<A:set[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Union","4",valueOfExpr(),details(" ",[],"","","\<A\> + "," == \<C\>",false,true,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[<"C","\<A\> + \<B\>">],void(),"\<B\>")),tvQuestion("Rascal/Expressions/Values/Set/Union","5",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Properties/fontSize":concept("Rascal/Libraries/Vis/Figure/Properties/fontSize",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/fontSize/fontSize.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/GreaterThan":concept("Rascal/Expressions/Values/Number/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/GreaterThan/GreaterThan.concept|,[],[],{"int","real","\>","bool"},[tvQuestion("Rascal/Expressions/Values/Number/GreaterThan","1",typeOfExpr(),details(" ",[],"","","\<A:int\> \> \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThan","2",typeOfExpr(),details(" ",[],"","","\<A:real\> \> \<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThan","3",typeOfExpr(),details(" ",[],"","","\<A:num\> \> \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThan","4",typeOfExpr(),details(" ",[],"","","\<A:num\> \> \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThan","5",valueOfExpr(),details(" ",[],"","","\<A:num\> \> \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/List/toString":concept("Rascal/Expressions/Values/List/toString",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/toString/toString.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/substring":concept("Rascal/Expressions/Values/String/substring",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/substring/substring.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/bottom":concept("Rascal/Libraries/Vis/Figure/Properties/bottom",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/bottom/bottom.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation/Priority":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation/Priority",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Priority/Priority.concept|,[],[],{"\>","=","alt_2","|","(","syntax"},[]),"Rascal/Declarations/StaticTyping/TypeConstraints":concept("Rascal/Declarations/StaticTyping/TypeConstraints",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/StaticTyping/TypeConstraints/TypeConstraints.concept|,[],[],{"\<:","&"},[]),"Rascal/Expressions/Values/Map/rangeX":concept("Rascal/Expressions/Values/Map/rangeX",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/rangeX/rangeX.concept|,[],[],{},[]),"Rascal/Libraries/Graph/reachX":concept("Rascal/Libraries/Graph/reachX",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/reachX/reachX.concept|,[],[],{},[]),"Rascal/Libraries/Java":concept("Rascal/Libraries/Java",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Java/Java.concept|,[],[],{"bound","long","short","variable","|","/*1*/","super","(\"","field","class","Modifier","final","constr","int","static","lang","public","primitive","entity","initializer","method","Object","Bound","]","float","\\","[","wildcard","array","char","elementType","strictfp","double","package","\"),","enumConstant","nr","=",";","Id","extended","interface","deprecated","([",");","str","protected",",","data","parameter",")","boolean","\")]);","(","abstract","java","PrimitiveType","list","volatile","id","extends","native","synchronized","void","typeParameter","anonymousClass","name","transient","returnType","byte","null","params","private","Entity","()","enum","primType"},[]),"Rascal/Expressions/Values/Map/rangeR":concept("Rascal/Expressions/Values/Map/rangeR",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/rangeR/rangeR.concept|,[],[],{},[]),"Rascal/Libraries/Graph/reachR":concept("Rascal/Libraries/Graph/reachR",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/reachR/reachR.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/computeFigure":concept("Rascal/Libraries/Vis/Figure/Figures/computeFigure",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/computeFigure/computeFigure.concept|,[],[],{},[]),"Rascal/Expressions":concept("Rascal/Expressions",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Expressions.concept|,[],["Values","Operators"],{},[]),"Rascal/InstallingAndRunning":concept("Rascal/InstallingAndRunning",|std:///experiments/RascalTutor/Courses/Rascal/InstallingAndRunning/InstallingAndRunning.concept|,[],[],{},[]),"Rascal/Libraries/IDE/Plugin":concept("Rascal/Libraries/IDE/Plugin",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/Plugin/Plugin.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Equivalence":concept("Rascal/Expressions/Values/Boolean/Equivalence",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Equivalence/Equivalence.concept|,[],[],{"bool","\<==\>"},[]),"Rascal/Libraries/Vis/Figure/Properties/resizable":concept("Rascal/Libraries/Vis/Figure/Properties/resizable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/resizable/resizable.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/MultiVariable":concept("Rascal/Patterns/Abstract/MultiVariable",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/MultiVariable/MultiVariable.concept|,[],[],{"*"},[]),"Rascal/Expressions/Values/String/LessThanOrEqual":concept("Rascal/Expressions/Values/String/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"bool","\<=","str"},[]),"Rascal/Expressions/Values/Node/getAnnotations":concept("Rascal/Expressions/Values/Node/getAnnotations",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/getAnnotations/getAnnotations.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/replaceFirst":concept("Rascal/Expressions/Values/String/replaceFirst",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/replaceFirst/replaceFirst.concept|,[],[],{},[]),"Rascal/Concepts/ImmutableValues":concept("Rascal/Concepts/ImmutableValues",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/ImmutableValues/ImmutableValues.concept|,[],[],{},[]),"Rascal/Libraries/Vis":concept("Rascal/Libraries/Vis",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Vis.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/shrink":concept("Rascal/Libraries/Vis/Figure/Properties/shrink",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shrink/shrink.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/isEmpty":concept("Rascal/Expressions/Values/Set/isEmpty",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/isEmpty/isEmpty.concept|,[],[],{},[]),"Rascal/Libraries/JDT/extractResource":concept("Rascal/Libraries/JDT/extractResource",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/extractResource/extractResource.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/gap":concept("Rascal/Libraries/Vis/Figure/Properties/gap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/gap/gap.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/InteractionModel":concept("Rascal/Libraries/Vis/Figure/InteractionModel",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/InteractionModel/InteractionModel.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/Negation":concept("Rascal/Expressions/Values/Number/Negation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Negation/Negation.concept|,[],[],{"int","real","-"},[tvQuestion("Rascal/Expressions/Values/Number/Negation","1",typeOfExpr(),details(" ",[],"","","-\<A:int\>","",false,false,[<"A",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Negation","2",typeOfExpr(),details(" ",[],"","","-\<A:real\>","",false,false,[<"A",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Negation","3",valueOfExpr(),details(" ",[],"","","-\<A:num\>","",false,false,[<"A",num(-20,20)>],[],void(),""))]),"Rascal/Libraries/Graph":concept("Rascal/Libraries/Graph",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/Graph.concept|,[],[],{"];","Graph","=","]",",","to","[&",";","from","rel","&","import","T","alias"},[]),"Rascal/Libraries/Vis/Figure/ColorModel/colorNames":concept("Rascal/Libraries/Vis/Figure/ColorModel/colorNames",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/colorNames/colorNames.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/onMouseDown":concept("Rascal/Libraries/Vis/Figure/Properties/onMouseDown",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onMouseDown/onMouseDown.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/Equal":concept("Rascal/Expressions/Values/String/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/Equal/Equal.concept|,[],[],{"bool","str","=="},[]),"Rascal/Expressions/Comprehensions":concept("Rascal/Expressions/Comprehensions",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Comprehensions/Comprehensions.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/NotEqual":concept("Rascal/Expressions/Values/Map/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/NotEqual/NotEqual.concept|,[],[],{"]","!=",",","map","[","bool"},[]),"Rascal/Expressions/Values/Number/GreaterThanOrEqual":concept("Rascal/Expressions/Values/Number/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","int","real","bool"},[tvQuestion("Rascal/Expressions/Values/Number/GreaterThanOrEqual","1",typeOfExpr(),details(" ",[],"","","\<A:int\> \>= \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThanOrEqual","2",typeOfExpr(),details(" ",[],"","","\<A:real\> \>= \<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThanOrEqual","3",typeOfExpr(),details(" ",[],"","","\<A:num\> \>= \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThanOrEqual","4",typeOfExpr(),details(" ",[],"","","\<A:num\> \>= \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/GreaterThanOrEqual","5",valueOfExpr(),details(" ",[],"","","\<A:num\> \>= \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Properties/fromArrow":concept("Rascal/Libraries/Vis/Figure/Properties/fromArrow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/fromArrow/fromArrow.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/Comprehension":concept("Rascal/Expressions/Values/Set/Comprehension",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Comprehension/Comprehension.concept|,[],[],{"}","]","|",",","{","[",")","lub","(","set"},[]),"Rascal/Expressions/Values/Number/Subtraction":concept("Rascal/Expressions/Values/Number/Subtraction",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Subtraction/Subtraction.concept|,[],[],{"int","real","-"},[tvQuestion("Rascal/Expressions/Values/Number/Subtraction","1",typeOfExpr(),details(" ",[],"","","\<A:int\> - \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Subtraction","2",typeOfExpr(),details(" ",[],"","","\<A:int\> - \<B:real\>","",false,false,[<"A",int(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Subtraction","3",typeOfExpr(),details(" ",[],"","","\<A:real\> - \<B:int\>","",false,false,[<"A",real(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Subtraction","4",valueOfExpr(),details(" ",[],"","","\<A:num\> - \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/Set/size":concept("Rascal/Expressions/Values/Set/size",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/size/size.concept|,[],[],{},[tvQuestion("Rascal/Expressions/Values/Set/size","1",valueOfExpr(),details(" ",["import Set;"],"","","size({ "," }) == \<N\>",false,true,[<"N",int(0,5)>],[],void(),"\<N\> values separated by commas"))]),"Rascal/Libraries/Vis/Figure/Figures/vcat":concept("Rascal/Libraries/Vis/Figure/Figures/vcat",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/vcat/vcat.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Negation":concept("Rascal/Expressions/Values/Boolean/Negation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Negation/Negation.concept|,[],[],{"bool","!"},[]),"Rascal/Expressions/Values/Number/min":concept("Rascal/Expressions/Values/Number/min",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/min/min.concept|,[],[],{},[tvQuestion("Rascal/Expressions/Values/Number/min","1",typeOfExpr(),details(" ",["import Number;"],"","","min(\<A:int\>, \<B:int\>)","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/min","2",typeOfExpr(),details(" ",["import Number;"],"","","min(\<A:int\>, \<B:real\>)","",false,false,[<"A",int(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/min","3",typeOfExpr(),details(" ",["import Number;"],"","","min(\<A:real\>, \<B:real\>)","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/min","4",valueOfExpr(),details(" ",["import Number;"],"","","min(\<A:num\>, \<B:num\>)","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Libraries/Resources/projects":concept("Rascal/Libraries/Resources/projects",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/projects/projects.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/tree":concept("Rascal/Libraries/Vis/Figure/Figures/tree",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/tree/tree.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/Concatenation":concept("Rascal/Expressions/Values/List/Concatenation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Concatenation/Concatenation.concept|,[],[],{"list","]",",","+","[","lub","(",")]"},[choiceQuestion("Rascal/Expressions/Values/List/Concatenation","1","  When you compute the union of two sets, the number of elements in the result is always:\n",[good("Greater than or equal the number of elements in both sets."),bad("Greater than the number of elements in both sets."),bad("Smaller than the number of elements in both sets."),bad("Smaller than or equal the number of elements in both sets.")]),tvQuestion("Rascal/Expressions/Values/List/Concatenation","2",typeOfExpr(),details(" ",[],"","","\<A:list[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/List/Concatenation","3",valueOfExpr(),details(" ",[],"","","\<A:list[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/List/Concatenation","4",valueOfExpr(),details(" ",[],"","","\<A\> + "," == \<C\>",false,true,[<"A",list(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[<"C","\<A\> + \<B\>">],void(),"\<B\>")),tvQuestion("Rascal/Expressions/Values/List/Concatenation","5",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/List/notin":concept("Rascal/Expressions/Values/List/notin",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/notin/notin.concept|,[],[],{"list","]","[","bool","notin"},[]),"Rascal/Libraries/Vis/Figure/ColorModel/arbColor":concept("Rascal/Libraries/Vis/Figure/ColorModel/arbColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/arbColor/arbColor.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/Difference":concept("Rascal/Expressions/Values/List/Difference",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Difference/Difference.concept|,[],[],{"list","]","-",",","[","lub","(",")]"},[]),"Rascal/Expressions/Values/Location/FieldSelection":concept("Rascal/Expressions/Values/Location/FieldSelection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/FieldSelection/FieldSelection.concept|,[],[],{".","loc"},[]),"Rascal/Statements/Return":concept("Rascal/Statements/Return",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Return/Return.concept|,[],[],{";","return"},[]),"Rascal/Expressions/Values/Node/LessThan":concept("Rascal/Expressions/Values/Node/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/LessThan/LessThan.concept|,[],[],{"\<","bool","node"},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Disambiguation.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/ColorModel/colorSteps":concept("Rascal/Libraries/Vis/Figure/ColorModel/colorSteps",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/colorSteps/colorSteps.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map":concept("Rascal/Expressions/Values/Map",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Map.concept|,[],[],{",","map","Map","[",":",")","lub","(","import",")]"},[]),"Rascal/Libraries/LabeledGraph/predecessors":concept("Rascal/Libraries/LabeledGraph/predecessors",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/predecessors/predecessors.concept|,[],[],{},[]),"Rascal/Libraries/ParseTree/unparse":concept("Rascal/Libraries/ParseTree/unparse",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ParseTree/unparse/unparse.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/replaceLast":concept("Rascal/Expressions/Values/String/replaceLast",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/replaceLast/replaceLast.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hresizable":concept("Rascal/Libraries/Vis/Figure/Properties/hresizable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hresizable/hresizable.concept|,[],[],{},[]),"Rascal/Libraries/ValueIO":concept("Rascal/Libraries/ValueIO",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/ValueIO.concept|,[],[],{";","ValueIO","import"},[]),"Rascal/Expressions/Values/List/Equal":concept("Rascal/Expressions/Values/List/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Equal/Equal.concept|,[],[],{"list","]","[","bool","=="},[tvQuestion("Rascal/Expressions/Values/List/Equal","1",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> == \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/List/min":concept("Rascal/Expressions/Values/List/min",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/min/min.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/invert":concept("Rascal/Expressions/Values/Relation/invert",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/invert/invert.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/reducer":concept("Rascal/Expressions/Values/List/reducer",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/reducer/reducer.concept|,[],[],{},[]),"Rascal/Libraries/IDE/ErrorMarking":concept("Rascal/Libraries/IDE/ErrorMarking",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/ErrorMarking/ErrorMarking.concept|,[],[],{"=","messages","l",";","message","t","@"},[]),"Rascal/Expressions/Values/Number/toReal":concept("Rascal/Expressions/Values/Number/toReal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/toReal/toReal.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/escape":concept("Rascal/Expressions/Values/String/escape",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/escape/escape.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/mapper":concept("Rascal/Expressions/Values/Map/mapper",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/mapper/mapper.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/SuperMap":concept("Rascal/Expressions/Values/Map/SuperMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/SuperMap/SuperMap.concept|,[],[],{"\>=","]",",","map","[","bool"},[]),"Rascal/Libraries/Message/error":concept("Rascal/Libraries/Message/error",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Message/error/error.concept|,[],[],{},[]),"Rascal/Concepts/StaticTyping":concept("Rascal/Concepts/StaticTyping",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/StaticTyping/StaticTyping.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/LessThan":concept("Rascal/Expressions/Values/String/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/LessThan/LessThan.concept|,[],[],{"\<","bool","str"},[]),"Rascal/Expressions/Values/Set/NotEqual":concept("Rascal/Expressions/Values/Set/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/NotEqual/NotEqual.concept|,[],[],{"]","!=","[","bool","set"},[tvQuestion("Rascal/Expressions/Values/Set/NotEqual","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> != \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Declarations/Annotation":concept("Rascal/Declarations/Annotation",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Annotation/Annotation.concept|,[],[],{"anno","@"},[]),"Rascal/Declarations":concept("Rascal/Declarations",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Declarations.concept|,[],["Module","Import","Program","StaticTyping","AlgebraicDataType","Variable","Function","Syntaxdefinition","Alias","Annotation","Tag"],{},[]),"Rascal/Declarations/StaticTyping/TypeParameters":concept("Rascal/Declarations/StaticTyping/TypeParameters",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/StaticTyping/TypeParameters/TypeParameters.concept|,[],[],{"&"},[]),"Rascal/Libraries/LabeledGraph/reach":concept("Rascal/Libraries/LabeledGraph/reach",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/reach/reach.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/lineWidth":concept("Rascal/Libraries/Vis/Figure/Properties/lineWidth",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/lineWidth/lineWidth.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/min":concept("Rascal/Expressions/Values/Set/min",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/min/min.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/StrictSuperSet":concept("Rascal/Expressions/Values/Set/StrictSuperSet",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/StrictSuperSet/StrictSuperSet.concept|,[],[],{"\>","]","[","bool","set"},[tvQuestion("Rascal/Expressions/Values/Set/StrictSuperSet","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> \> \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Node/GreaterThanOrEqual":concept("Rascal/Expressions/Values/Node/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","bool","node"},[]),"Rascal/Libraries/Vis/Figure/Properties/connect":concept("Rascal/Libraries/Vis/Figure/Properties/connect",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/connect/connect.concept|,[],[],{},[]),"Rascal/Expressions/Values/Location/Equal":concept("Rascal/Expressions/Values/Location/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/Equal/Equal.concept|,[],[],{"bool","==","loc"},[]),"Rascal/Expressions/Values/Number/Addition":concept("Rascal/Expressions/Values/Number/Addition",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Addition/Addition.concept|,[],[],{"int","real","+"},[tvQuestion("Rascal/Expressions/Values/Number/Addition","1",typeOfExpr(),details(" Adding integers. \n",[],"","","\<A:int[0]\> + \<B:int[0]\>","",false,false,[<"A",int(0,20)>,<"B",int(0,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Addition","2",valueOfExpr(),details(" Adding integers. \n",[],"","","\<A:int[0]\> + \<B:int[0]\> ","",false,false,[<"A",int(0,20)>,<"B",int(0,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Addition","3",typeOfExpr(),details(" Adding integers and reals.\n",[],"","","\<A:int[0]\> + \<B:real[0]\>","",false,false,[<"A",int(0,20)>,<"B",real(0,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Addition","4",valueOfExpr(),details(" ",[],"","","\<A:int[0]\> + \<B:real[0]\> ","",false,false,[<"A",int(0,20)>,<"B",real(0,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Addition","5",valueOfExpr(),details(" Use parentheses when addition and negative numbers interact.\n",[],"","","\<A:int\> + (\<B:int[-20,-1]\>)","",false,false,[<"A",int(-20,20)>,<"B",int(-20,-1)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Addition","6",valueOfExpr(),details(" Use parentheses when addition and negative numbers interact.\n",[],"","","\<A\> + "," == \<C\>",false,true,[<"A",int(-20,20)>,<"B",int(0,10)>],[<"C","\<A\> - \<B\>">],void(),""))]),"Rascal/Libraries/IO/readFileBytes":concept("Rascal/Libraries/IO/readFileBytes",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/readFileBytes/readFileBytes.concept|,[],[],{},[]),"Rascal/Statements":concept("Rascal/Statements",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Statements.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/ReflexiveTransitiveClosure":concept("Rascal/Expressions/Values/Relation/ReflexiveTransitiveClosure",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/ReflexiveTransitiveClosure/ReflexiveTransitiveClosure.concept|,[],[],{"]",",","[","*","rel"},[]),"Rascal/Libraries/Vis/Figure/Figures/grid":concept("Rascal/Libraries/Vis/Figure/Figures/grid",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/grid/grid.concept|,[],[],{},[]),"Rascal/Libraries/LabeledGraph/successors":concept("Rascal/Libraries/LabeledGraph/successors",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/successors/successors.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Render/render":concept("Rascal/Libraries/Vis/Render/render",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Render/render/render.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/checkbox":concept("Rascal/Libraries/Vis/Figure/Figures/checkbox",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/checkbox/checkbox.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/lineStyle":concept("Rascal/Libraries/Vis/Figure/Properties/lineStyle",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/lineStyle/lineStyle.concept|,[],[],{},[]),"Rascal/Libraries/IDE/DocumentationHover":concept("Rascal/Libraries/IDE/DocumentationHover",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/DocumentationHover/DocumentationHover.concept|,[],[],{"=","doc","t","@"},[]),"Rascal/Expressions/Values/String/center":concept("Rascal/Expressions/Values/String/center",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/center/center.concept|,[],[],{"int","n",",",")","(","center","pad","s","str"},[]),"Rascal/Expressions/Values/Node/setAnnotations":concept("Rascal/Expressions/Values/Node/setAnnotations",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/setAnnotations/setAnnotations.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/TypeConstrained":concept("Rascal/Patterns/Abstract/TypeConstrained",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/TypeConstrained/TypeConstrained.concept|,[" add example"],[],{"]","["},[]),"Rascal/Libraries/PriorityQueue":concept("Rascal/Libraries/PriorityQueue",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/PriorityQueue.concept|,[],[],{"PriorityQueue",";","import"},[]),"Rascal/Expressions/Values/Relation/ident":concept("Rascal/Expressions/Values/Relation/ident",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/ident/ident.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vresizable":concept("Rascal/Libraries/Vis/Figure/Properties/vresizable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vresizable/vresizable.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/invertUnique":concept("Rascal/Expressions/Values/Map/invertUnique",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/invertUnique/invertUnique.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/power1":concept("Rascal/Expressions/Values/Set/power1",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/power1/power1.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/StrictSubMap":concept("Rascal/Expressions/Values/Map/StrictSubMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/StrictSubMap/StrictSubMap.concept|,[],[],{"]","\<",",","map","[","bool"},[]),"Rascal/Expressions/Values/Number/LessThan":concept("Rascal/Expressions/Values/Number/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/LessThan/LessThan.concept|,[],[],{"int","real","\<","bool"},[tvQuestion("Rascal/Expressions/Values/Number/LessThan","1",typeOfExpr(),details(" ",[],"","","\<A:int\> \< \<A:int\>","",false,false,[<"A",int(-20,20)>,<"A",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThan","2",typeOfExpr(),details(" ",[],"","","\<A:real\> \< \<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThan","3",typeOfExpr(),details(" ",[],"","","\<A:num\> \< \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThan","4",typeOfExpr(),details(" ",[],"","","\<A:num\> \< \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThan","5",valueOfExpr(),details(" ",[],"","","\<A:num\> \< \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/String":concept("Rascal/Expressions/Values/String",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/String.concept|,[],[],{"\>","n","\<","\\","import","\'\\\\\\\\\\\\\\\\\\\\","...\"","t","\"","r","b","String","str"},[]),"Rascal/Patterns/Abstract/List":concept("Rascal/Patterns/Abstract/List",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/List/List.concept|,[],[],{"]",",","["},[]),"Rascal/Libraries/Vis/Figure/Properties/shapeConnected":concept("Rascal/Libraries/Vis/Figure/Properties/shapeConnected",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shapeConnected/shapeConnected.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value/Equal":concept("Rascal/Expressions/Values/Value/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/Equal/Equal.concept|,[],[],{"bool","value","=="},[]),"Rascal/Libraries/Vis/Figure/CompositionModel":concept("Rascal/Libraries/Vis/Figure/CompositionModel",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/CompositionModel/CompositionModel.concept|,[],[],{},[]),"Rascal/Libraries/ValueIO/writeBinaryValueFile":concept("Rascal/Libraries/ValueIO/writeBinaryValueFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/writeBinaryValueFile/writeBinaryValueFile.concept|,[],[],{},[]),"Rascal/Declarations/Module":concept("Rascal/Declarations/Module",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Module/Module.concept|,[],[],{"module",";"},[]),"Rascal/Expressions/Values/Map/Comprehension":concept("Rascal/Expressions/Values/Map/Comprehension",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Comprehension/Comprehension.concept|,[],[],{"]","map",",","|","[",":",")","("},[]),"Rascal/Concepts/IDEConstruction":concept("Rascal/Concepts/IDEConstruction",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/IDEConstruction/IDEConstruction.concept|,[],[],{},[]),"Rascal/Libraries/Scripting":concept("Rascal/Libraries/Scripting",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Scripting/Scripting.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/Reserve.concept|,[],[],{"\\\\"},[]),"Rascal/Libraries/Vis/Figure/Properties/vgap":concept("Rascal/Libraries/Vis/Figure/Properties/vgap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vgap/vgap.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/GreaterThanOrEqual":concept("Rascal/Expressions/Values/DateTime/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","datetime","bool"},[]),"Rascal/Libraries/IDE/Menus":concept("Rascal/Libraries/IDE/Menus",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/Menus/Menus.concept|,[],[],{},[]),"Rascal/Expressions/Values/Tuple/FieldSelection":concept("Rascal/Expressions/Values/Tuple/FieldSelection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/FieldSelection/FieldSelection.concept|,[],[],{".","]",",","[","tuple"},[]),"Rascal/Patterns/Concrete":concept("Rascal/Patterns/Concrete",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Concrete/Concrete.concept|,[],[],{"\>","\<",")","(","`"},[]),"Rascal/Libraries/Vis/Figure/Properties/std":concept("Rascal/Libraries/Vis/Figure/Properties/std",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/std/std.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/LessThanOrEqual":concept("Rascal/Expressions/Values/Number/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"int","real","bool","\<="},[tvQuestion("Rascal/Expressions/Values/Number/LessThanOrEqual","1",typeOfExpr(),details("",[],"","","\<A:int\>\<=\<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThanOrEqual","2",typeOfExpr(),details("",[],"","","\<A:real\>\<=\<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThanOrEqual","3",typeOfExpr(),details("",[],"","","\<A:num\>\<=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThanOrEqual","4",typeOfExpr(),details("",[],"","","\<A:num\>\<=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/LessThanOrEqual","5",valueOfExpr(),details("",[],"","","\<A:num\>\<=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/Map/Difference":concept("Rascal/Expressions/Values/Map/Difference",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Difference/Difference.concept|,[],[],{"]","-",",","map","[","lub","(",")]","),"},[]),"Rascal/Statements/Fail":concept("Rascal/Statements/Fail",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Fail/Fail.concept|,[],[],{"fail",";"},[]),"Rascal/Patterns/Abstract/Descendant":concept("Rascal/Patterns/Abstract/Descendant",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Descendant/Descendant.concept|,[],[],{"/"},[]),"Rascal/Libraries/Vis/Figure/Properties/hint":concept("Rascal/Libraries/Vis/Figure/Properties/hint",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hint/hint.concept|,[],[],{},[]),"Rascal/Expressions/ConcreteSyntax":concept("Rascal/Expressions/ConcreteSyntax",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/ConcreteSyntax/ConcreteSyntax.concept|,[],[],{"=","\\","X","\"\<\"","\"\>\";","syntax","Pattern","p"},[]),"Rascal/Expressions/Values/List/mapper":concept("Rascal/Expressions/Values/List/mapper",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/mapper/mapper.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/KeyModifier":concept("Rascal/Libraries/Vis/Figure/KeyModifier",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/KeyModifier/KeyModifier.concept|,[],[],{"modCtrl","=","|","();","data","modCommand","modAlt","KeyModifier","()","modShift"},[]),"Rascal/Patterns/Regular":concept("Rascal/Patterns/Regular",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Regular/Regular.concept|,[],[],{"/"},[]),"Rascal/Expressions/Values/Tuple":concept("Rascal/Expressions/Values/Tuple",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/Tuple.concept|,[],[],{"\>","]","\<",",","[","tuple"},[]),"Rascal/Libraries/Vis/Figure/Figures/button":concept("Rascal/Libraries/Vis/Figure/Figures/button",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/button/button.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/FieldSelection":concept("Rascal/Expressions/Values/DateTime/FieldSelection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/FieldSelection/FieldSelection.concept|,[],[],{".","datetime"},[]),"Rascal/Declarations/Variable":concept("Rascal/Declarations/Variable",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Variable/Variable.concept|,[],[],{"\<:","=",";"},[]),"Rascal/Libraries/IO/writeFile":concept("Rascal/Libraries/IO/writeFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/writeFile/writeFile.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/IfDefinedElse":concept("Rascal/Expressions/Values/Boolean/IfDefinedElse",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/IfDefinedElse/IfDefinedElse.concept|,[],[],{"?","\<:"},[]),"Rascal/Libraries/Vis/Figure/ColorModel/interpolateColor":concept("Rascal/Libraries/Vis/Figure/ColorModel/interpolateColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/interpolateColor/interpolateColor.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/timer":concept("Rascal/Libraries/Vis/Figure/Properties/timer",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/timer/timer.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/size":concept("Rascal/Expressions/Values/Map/size",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/size/size.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/height":concept("Rascal/Libraries/Vis/Figure/Properties/height",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/height/height.concept|,[],[],{},[]),"Rascal/Libraries/IO/mkDirectory":concept("Rascal/Libraries/IO/mkDirectory",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/mkDirectory/mkDirectory.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/toList":concept("Rascal/Expressions/Values/Map/toList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/toList/toList.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/onMouseMove":concept("Rascal/Libraries/Vis/Figure/Properties/onMouseMove",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onMouseMove/onMouseMove.concept|,[],[],{},[]),"Rascal/Concepts/Functions":concept("Rascal/Concepts/Functions",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Functions/Functions.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/shadow":concept("Rascal/Libraries/Vis/Figure/Properties/shadow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shadow/shadow.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/VariableDeclaration":concept("Rascal/Patterns/Abstract/VariableDeclaration",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/VariableDeclaration/VariableDeclaration.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/toRel":concept("Rascal/Expressions/Values/Map/toRel",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/toRel/toRel.concept|,[],[],{},[]),"Rascal/Libraries/ParseTree/implode":concept("Rascal/Libraries/ParseTree/implode",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ParseTree/implode/implode.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hshrink":concept("Rascal/Libraries/Vis/Figure/Properties/hshrink",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hshrink/hshrink.concept|,[],[],{},[]),"Rascal/Libraries/IO/isFile":concept("Rascal/Libraries/IO/isFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/isFile/isFile.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/toUpperCase":concept("Rascal/Expressions/Values/String/toUpperCase",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/toUpperCase/toUpperCase.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/takeOneFrom":concept("Rascal/Expressions/Values/List/takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/takeOneFrom/takeOneFrom.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/Comprehension":concept("Rascal/Expressions/Values/List/Comprehension",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Comprehension/Comprehension.concept|,[],[],{"list","]","|",",","[",")","lub","("},[]),"Rascal/Patterns/Abstract/Tuple":concept("Rascal/Patterns/Abstract/Tuple",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Tuple/Tuple.concept|,[],[],{"\>","\<",","},[]),"Rascal/Libraries/LabeledGraph/shortestPathPair":concept("Rascal/Libraries/LabeledGraph/shortestPathPair",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/shortestPathPair/shortestPathPair.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Angles":concept("Rascal/Libraries/Vis/Figure/Angles",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Angles/Angles.concept|,[],[],{},[]),"Rascal/Contents":concept("Rascal/Contents",|std:///experiments/RascalTutor/Courses/Rascal/Contents/Contents.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/isEmpty":concept("Rascal/Expressions/Values/Map/isEmpty",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/isEmpty/isEmpty.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/Equal":concept("Rascal/Expressions/Values/DateTime/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/Equal/Equal.concept|,[],[],{"datetime","bool","=="},[]),"Rascal/Expressions/Values/String/right":concept("Rascal/Expressions/Values/String/right",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/right/right.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/max":concept("Rascal/Expressions/Values/Number/max",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/max/max.concept|,[],[],{},[tvQuestion("Rascal/Expressions/Values/Number/max","1",typeOfExpr(),details(" ",["import Number;"],"","","max(\<A:int\>, \<B:int\>)","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/max","2",typeOfExpr(),details(" ",["import Number;"],"","","max(\<A:int\>, \<B:real\>)","",false,false,[<"A",int(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/max","3",valueOfExpr(),details(" ",["import Number;"],"","","max(\<A:num\>, \<B:num\>)","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/max","4",valueOfExpr(),details(" ",["import Number;"],"","","max(\<A\>, ",") == \<C\>",false,true,[<"A",num(-20,20)>,<"B",num(0,20)>],[<"C","\<A\> + \<B\>">],void(),"\<C\>")),tvQuestion("Rascal/Expressions/Values/Number/max","5",valueOfExpr(),details(" ",["import Number;"],"","","max(\<A\>, ",") == \<A\>",false,true,[<"A",num(-20,20)>],[],void(),"any value smaller than \<A\>"))]),"Rascal/Concepts":concept("Rascal/Concepts",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Concepts.concept|,[],["StaticTyping","Datatypes","ImmutableValues","Comprehensions","PatternMatching","ControlStructures","CaseDistinction","Visiting","Enumerators","Functions","SyntaxDefinitionAndParsing","RewriteRules","IDEConstruction"],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vcenter":concept("Rascal/Libraries/Vis/Figure/Properties/vcenter",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vcenter/vcenter.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vconnect":concept("Rascal/Libraries/Vis/Figure/Properties/vconnect",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vconnect/vconnect.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vstartGap":concept("Rascal/Libraries/Vis/Figure/Properties/vstartGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vstartGap/vstartGap.concept|,[],[],{},[]),"Rascal/Concepts/SyntaxDefinitionAndParsing":concept("Rascal/Concepts/SyntaxDefinitionAndParsing",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/SyntaxDefinitionAndParsing/SyntaxDefinitionAndParsing.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/align":concept("Rascal/Libraries/Vis/Figure/Properties/align",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/align/align.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/takeOneFrom":concept("Rascal/Expressions/Values/Set/takeOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/takeOneFrom/takeOneFrom.concept|,[],[],{},[]),"Rascal/Statements/TryCatch":concept("Rascal/Statements/TryCatch",|std:///experiments/RascalTutor/Courses/Rascal/Statements/TryCatch/TryCatch.concept|,[],[],{"catch",";","try",":","finally"},[]),"Rascal/Libraries/Vis/Figure/Figures/LineDecoration":concept("Rascal/Libraries/Vis/Figure/Figures/LineDecoration",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/LineDecoration/LineDecoration.concept|,[],[],{"=","lineNumber","warning","|",";","highlight","str","int","info",",","data","public",")","error","(","level","LineDecoration","msg"},[]),"Rascal/Expressions/Values/String/startsWith":concept("Rascal/Expressions/Values/String/startsWith",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/startsWith/startsWith.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Implication":concept("Rascal/Expressions/Values/Boolean/Implication",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Implication/Implication.concept|,[],[],{"==\>","bool"},[]),"Rascal/Expressions/Values/Number/toString":concept("Rascal/Expressions/Values/Number/toString",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/toString/toString.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/label":concept("Rascal/Libraries/Vis/Figure/Properties/label",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/label/label.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/Intersection":concept("Rascal/Expressions/Values/Map/Intersection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Intersection/Intersection.concept|,[],[],{"]","map",",","[","lub","(","&",")]","set"},[]),"Rascal/Expressions/Values/Set":concept("Rascal/Expressions/Values/Set",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Set.concept|,[],[],{"}","]",",","{","[",")","lub","(","import","set","Set"},[choiceQuestion("Rascal/Expressions/Values/Set","1","  Sets can be used to represent a sequence of values when\n",[good("The values have no duplicates and no order."),bad("The values have duplicates."),bad("The values are unordered.")]),choiceQuestion("Rascal/Expressions/Values/Set","2","  The type of a set is determined by:\n",[good("The upperbound of the type of all elements."),bad("The type of the first element that was first added to the set."),bad("The upperbound of the type of two arbitrary elements.")]),tvQuestion("Rascal/Expressions/Values/Set","3",typeOfExpr(),details(" ",[],"","","{1, "," }",false,true,[],[],set(int(-20,20)),"one or more integer values separated by commas")),tvQuestion("Rascal/Expressions/Values/Set","4",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set","5",typeOfExpr(),details(" ",[],"","","{\<A:int\>, \<B:str\>, \<C:int\>}","",false,false,[<"A",int(-20,20)>,<"B",str()>,<"C",int(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/String/contains":concept("Rascal/Expressions/Values/String/contains",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/contains/contains.concept|,[],[],{},[]),"Rascal/Patterns":concept("Rascal/Patterns",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Patterns.concept|,[],[],{},[]),"Rascal/Expressions/Values/Location/NotEqual":concept("Rascal/Expressions/Values/Location/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/NotEqual/NotEqual.concept|,[],[],{"!=","bool","loc"},[]),"Rascal/Expressions/Values/List/max":concept("Rascal/Expressions/Values/List/max",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/max/max.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/toString":concept("Rascal/Expressions/Values/Boolean/toString",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/toString/toString.concept|,[],[],{},[]),"Rascal/Libraries/Resources/root":concept("Rascal/Libraries/Resources/root",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/root/root.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/reverse":concept("Rascal/Expressions/Values/List/reverse",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/reverse/reverse.concept|,[],[],{},[]),"Rascal/Libraries/IO/listEntries":concept("Rascal/Libraries/IO/listEntries",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/listEntries/listEntries.concept|,[],[],{},[]),"Rascal/Statements/If":concept("Rascal/Statements/If",|std:///experiments/RascalTutor/Courses/Rascal/Statements/If/If.concept|,[],[],{"if",",",";","bool","lub","else",")","(","void"},[tvQuestion("Rascal/Statements/If","1",typeOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) 10; else 20;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Statements/If","2",typeOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) \<C:str\>; else \<D:str\>;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",str()>,<"D",str()>],[],void(),"")),tvQuestion("Rascal/Statements/If","3",valueOfExpr(),details(" ",[],"","","if( \<A:int\> \> \<B:int\> ) 10; else 20;","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/List/SubList":concept("Rascal/Expressions/Values/List/SubList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/SubList/SubList.concept|,[],[],{"list","]","[","bool","\<="},[tvQuestion("Rascal/Expressions/Values/List/SubList","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> \<= \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Relation/range":concept("Rascal/Expressions/Values/Relation/range",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/range/range.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hconnect":concept("Rascal/Libraries/Vis/Figure/Properties/hconnect",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hconnect/hconnect.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/aspectRatio":concept("Rascal/Libraries/Vis/Figure/Properties/aspectRatio",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/aspectRatio/aspectRatio.concept|,[],[],{},[]),"Rascal/Expressions/Selection":concept("Rascal/Expressions/Selection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Selection/Selection.concept|,[],[],{"\<:","node","@"},[]),"Rascal/Expressions/Reducer":concept("Rascal/Expressions/Reducer",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Reducer/Reducer.concept|,[],[],{"|",",",")","("},[]),"Rascal/Expressions/Values/List/StrictSuperList":concept("Rascal/Expressions/Values/List/StrictSuperList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/StrictSuperList/StrictSuperList.concept|,[],[],{"\>","list","]","[","bool"},[tvQuestion("Rascal/Expressions/Values/List/StrictSuperList","1",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> \> \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Location/LessThanOrEqual":concept("Rascal/Expressions/Values/Location/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"bool","\<=","loc"},[]),"Rascal/Expressions/Values/Relation/FieldSelection":concept("Rascal/Expressions/Values/Relation/FieldSelection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/FieldSelection/FieldSelection.concept|,[],[],{".","]",",","[","rel","set"},[]),"Rascal/Libraries/Vis/Figure/Figures/hcat":concept("Rascal/Libraries/Vis/Figure/Figures/hcat",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/hcat/hcat.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/combo":concept("Rascal/Libraries/Vis/Figure/Figures/combo",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/combo/combo.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/ColorModel/gray":concept("Rascal/Libraries/Vis/Figure/ColorModel/gray",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/gray/gray.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/box":concept("Rascal/Libraries/Vis/Figure/Figures/box",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/box/box.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/delete":concept("Rascal/Expressions/Values/List/delete",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/delete/delete.concept|,[],[],{},[]),"Rascal/Patterns/PatternWithAction":concept("Rascal/Patterns/PatternWithAction",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/PatternWithAction/PatternWithAction.concept|,[],[],{":","=\>"},[]),"Rascal/InstallingAndRunning/Running":concept("Rascal/InstallingAndRunning/Running",|std:///experiments/RascalTutor/Courses/Rascal/InstallingAndRunning/Running/Running.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/max":concept("Rascal/Expressions/Values/Set/max",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/max/max.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Render/renderSave":concept("Rascal/Libraries/Vis/Render/renderSave",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Render/renderSave/renderSave.concept|,[],[],{},[]),"Rascal/InstallingAndRunning/Installing":concept("Rascal/InstallingAndRunning/Installing",|std:///experiments/RascalTutor/Courses/Rascal/InstallingAndRunning/Installing/Installing.concept|,[],[],{},[]),"Rascal/Libraries/IO/println":concept("Rascal/Libraries/IO/println",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/println/println.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Or":concept("Rascal/Expressions/Values/Boolean/Or",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Or/Or.concept|,[],[],{"bool","||"},[]),"Rascal/Expressions/Values/Number":concept("Rascal/Expressions/Values/Number",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Number.concept|,[],[],{"int","real","Number","num","import"},[]),"Rascal/Expressions/Values/Tuple/Concatenation":concept("Rascal/Expressions/Values/Tuple/Concatenation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/Concatenation/Concatenation.concept|,[],[],{"\>","]",",","[","+","tuple"},[]),"Rascal/Libraries/IDE/Hyperlinking":concept("Rascal/Libraries/IDE/Hyperlinking",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/Hyperlinking/Hyperlinking.concept|,[],[],{"=","link","links","t","@"},[]),"Rascal/Expressions/Values":concept("Rascal/Expressions/Values",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Values.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/rangeX":concept("Rascal/Expressions/Values/Relation/rangeX",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/rangeX/rangeX.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/Multiplication":concept("Rascal/Expressions/Values/Number/Multiplication",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Multiplication/Multiplication.concept|,[],[],{"int","real","*"},[tvQuestion("Rascal/Expressions/Values/Number/Multiplication","1",typeOfExpr(),details(" ",[],"","","\<A:int\> * \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Multiplication","2",typeOfExpr(),details(" ",[],"","","\<A:int\> * \<B:real\>","",false,false,[<"A",int(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Multiplication","3",typeOfExpr(),details(" ",[],"","","\<A:real\> * \<B:int\>","",false,false,[<"A",real(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Multiplication","4",valueOfExpr(),details(" ",[],"","","\<A:num\> * \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/DateTime/LessThanOrEqual":concept("Rascal/Expressions/Values/DateTime/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"datetime","bool","\<="},[]),"Rascal/Libraries/Vis/Figure/Properties/vendGap":concept("Rascal/Libraries/Vis/Figure/Properties/vendGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vendGap/vendGap.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/rangeR":concept("Rascal/Expressions/Values/Relation/rangeR",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/rangeR/rangeR.concept|,[],[],{},[]),"Rascal/Concepts/Datatypes":concept("Rascal/Concepts/Datatypes",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Datatypes/Datatypes.concept|,[],[],{},[]),"Rascal/Libraries/IDE":concept("Rascal/Libraries/IDE",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/IDE.concept|,[],[],{";","IDE","import","util","::"},[]),"Rascal/Expressions/Values/Set/Product":concept("Rascal/Expressions/Values/Set/Product",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Product/Product.concept|,[],[],{"]",",","[","*","rel","set"},[tvQuestion("Rascal/Expressions/Values/Set/Product","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str]]\> * \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Product","2",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> * \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Product","3",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> * \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/List/insertAt":concept("Rascal/Expressions/Values/List/insertAt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/insertAt/insertAt.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/complement":concept("Rascal/Expressions/Values/Relation/complement",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/complement/complement.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/power":concept("Rascal/Expressions/Values/Set/power",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/power/power.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/top":concept("Rascal/Libraries/Vis/Figure/Properties/top",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/top/top.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/shadowPos":concept("Rascal/Libraries/Vis/Figure/Properties/shadowPos",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shadowPos/shadowPos.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/toMapUnique":concept("Rascal/Expressions/Values/List/toMapUnique",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/toMapUnique/toMapUnique.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value/NotEqual":concept("Rascal/Expressions/Values/Value/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/NotEqual/NotEqual.concept|,[],[],{"!=","bool","value"},[]),"Rascal/Libraries/Vis/Figure/ColorModel/palette":concept("Rascal/Libraries/Vis/Figure/ColorModel/palette",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/palette/palette.concept|,[],[],{},[]),"Rascal/Statements/Assignment":concept("Rascal/Statements/Assignment",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Assignment/Assignment.concept|,[],[],{"?","/=",".","?=","\>","=","]",",","\<","[",")","(","*=","+=","@","-="},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation/Follow":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation/Follow",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Follow/Follow.concept|,[],[],{"!\>\>","\>\>"},[]),"Rascal/Concepts/PatternMatching":concept("Rascal/Concepts/PatternMatching",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/PatternMatching/PatternMatching.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures":concept("Rascal/Libraries/Vis/Figure/Figures",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/Figures.concept|,[],[],{"Figures","];","list","=","[","Figure","alias"},[]),"Rascal/Libraries/Vis/Figure/Figures/graph":concept("Rascal/Libraries/Vis/Figure/Figures/graph",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/graph/graph.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/scale":concept("Rascal/Libraries/Vis/Figure/Figures/scale",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/scale/scale.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value/GreaterThan":concept("Rascal/Expressions/Values/Value/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/GreaterThan/GreaterThan.concept|,["Rascal implementation: broken","Static Error: prompt:///:1,0: \> not supported on value and valueStatic Error: prompt:///:1,0: \> not supported on value and value"],[],{"\>","bool","value"},[]),"Rascal/Expressions/Values/Set/SuperSet":concept("Rascal/Expressions/Values/Set/SuperSet",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/SuperSet/SuperSet.concept|,[],[],{"\>=","]","[","bool","set"},[tvQuestion("Rascal/Expressions/Values/Set/SuperSet","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> \>= \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Statements/Block":concept("Rascal/Statements/Block",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Block/Block.concept|,[],[],{"}","{"},[]),"Rascal/Expressions/Values/Constructor":concept("Rascal/Expressions/Values/Constructor",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Constructor/Constructor.concept|,[],[],{",",")","("},[]),"Rascal/Libraries/Vis/Figure/Properties/manhattan":concept("Rascal/Libraries/Vis/Figure/Properties/manhattan",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/manhattan/manhattan.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node/GreaterThan":concept("Rascal/Expressions/Values/Node/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/GreaterThan/GreaterThan.concept|,[],[],{"\>","bool","node"},[]),"Rascal/Expressions/Values/Set/toMap":concept("Rascal/Expressions/Values/Set/toMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/toMap/toMap.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/arbBool":concept("Rascal/Expressions/Values/Boolean/arbBool",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/arbBool/arbBool.concept|,[],[],{},[]),"Rascal/Libraries/JDT":concept("Rascal/Libraries/JDT",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/JDT.concept|,[],[],{"EntitySet","declaredTopTypes","]","modifiers","to","[","extends","fields","constructors","types","rel","declaredMethods","variables","Modifier","modifier","EntityRel","calls","BindingRel","declaredSubTypes","methods","implements","fieldDecls","packages",",","from","methodDecls","classes","entity","Entity","ModifierRel","set","loc"},[]),"Rascal/Libraries/Vis/Figure/Figures/treemap":concept("Rascal/Libraries/Vis/Figure/Figures/treemap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/treemap/treemap.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/Labelled":concept("Rascal/Patterns/Abstract/Labelled",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Labelled/Labelled.concept|,[],[],{":"},[]),"Rascal/Patterns/Abstract/TypedLabelled":concept("Rascal/Patterns/Abstract/TypedLabelled",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/TypedLabelled/TypedLabelled.concept|,[" add example"],[],{":"},[]),"Rascal/Libraries/Vis/Figure/Figures/pack":concept("Rascal/Libraries/Vis/Figure/Figures/pack",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/pack/pack.concept|,[],[],{},[]),"Rascal/Libraries/ValueIO/readTextValueFile":concept("Rascal/Libraries/ValueIO/readTextValueFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/readTextValueFile/readTextValueFile.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node":concept("Rascal/Expressions/Values/Node",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/Node.concept|,[],[],{",",")","(","import","node","Node","value","str"},[]),"Rascal/Expressions/Values/Set/toMapUnique":concept("Rascal/Expressions/Values/Set/toMapUnique",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/toMapUnique/toMapUnique.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/center":concept("Rascal/Libraries/Vis/Figure/Properties/center",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/center/center.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/startGap":concept("Rascal/Libraries/Vis/Figure/Properties/startGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/startGap/startGap.concept|,[],[],{},[]),"Rascal/Libraries/IO/lastModified":concept("Rascal/Libraries/IO/lastModified",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/lastModified/lastModified.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/Composition":concept("Rascal/Expressions/Values/Relation/Composition",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Composition/Composition.concept|,[],[],{"o","]",",","[","rel"},[]),"Rascal/Libraries/Resources":concept("Rascal/Libraries/Resources",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/Resources.concept|,[],[],{"=","]","file","|","[","id",";","projects","contents","project",");","folder","Resource",",","data",")","(","Resources","import","root","set","util","loc","::"},[]),"Rascal/Libraries/Vis/Figure/Properties/valign":concept("Rascal/Libraries/Vis/Figure/Properties/valign",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/valign/valign.concept|,[],[],{},[]),"Rascal/Libraries/JDT/extractProject":concept("Rascal/Libraries/JDT/extractProject",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/extractProject/extractProject.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/shadowColor":concept("Rascal/Libraries/Vis/Figure/Properties/shadowColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/shadowColor/shadowColor.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/Variable":concept("Rascal/Patterns/Abstract/Variable",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Variable/Variable.concept|,[],[],{},[]),"Rascal/Expressions/Values/Tuple/GreaterThan":concept("Rascal/Expressions/Values/Tuple/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/GreaterThan/GreaterThan.concept|,[],[],{"\>","]",",","[","bool","tuple"},[]),"Rascal/Declarations/StaticTyping/ReifiedTypes":concept("Rascal/Declarations/StaticTyping/ReifiedTypes",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/StaticTyping/ReifiedTypes/ReifiedTypes.concept|,[],[],{"type","#"},[]),"Rascal/Expressions/Values/Boolean/toInt":concept("Rascal/Expressions/Values/Boolean/toInt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/toInt/toInt.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/reverse":concept("Rascal/Expressions/Values/String/reverse",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/reverse/reverse.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/ialign":concept("Rascal/Libraries/Vis/Figure/Properties/ialign",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/ialign/ialign.concept|,[],[],{"ialign","FProperty",")","(","num","align"},[]),"Rascal/Expressions/Values/List/slice":concept("Rascal/Expressions/Values/List/slice",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/slice/slice.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/notin":concept("Rascal/Expressions/Values/Map/notin",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/notin/notin.concept|,[],[],{"]",",","map","[","bool","notin"},[]),"Rascal/Statements/Do":concept("Rascal/Statements/Do",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Do/Do.concept|,[],[],{"do","(",");","while"},[]),"Rascal/Libraries/Vis/Figure/Properties/onMouseEnter":concept("Rascal/Libraries/Vis/Figure/Properties/onMouseEnter",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onMouseEnter/onMouseEnter.concept|,[],[],{},[]),"Rascal/Libraries/ValueIO/readTextValueString":concept("Rascal/Libraries/ValueIO/readTextValueString",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/readTextValueString/readTextValueString.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/domain":concept("Rascal/Expressions/Values/Map/domain",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/domain/domain.concept|,[],[],{},[]),"Rascal/Libraries/RSF":concept("Rascal/Libraries/RSF",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/RSF/RSF.concept|,[],[],{";","import","RSF"},[]),"Rascal/Libraries/Vis/Figure/Properties/hgap":concept("Rascal/Libraries/Vis/Figure/Properties/hgap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hgap/hgap.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hshadowPos":concept("Rascal/Libraries/Vis/Figure/Properties/hshadowPos",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hshadowPos/hshadowPos.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/onKeyDown":concept("Rascal/Libraries/Vis/Figure/Properties/onKeyDown",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onKeyDown/onKeyDown.concept|,[],[],{},[]),"Rascal/Libraries/PriorityQueue/insertElement":concept("Rascal/Libraries/PriorityQueue/insertElement",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/insertElement/insertElement.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/isEmpty":concept("Rascal/Expressions/Values/List/isEmpty",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/isEmpty/isEmpty.concept|,[],[],{},[]),"Rascal/Libraries/Graph/shortestPathPair":concept("Rascal/Libraries/Graph/shortestPathPair",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/shortestPathPair/shortestPathPair.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/space":concept("Rascal/Libraries/Vis/Figure/Figures/space",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/space/space.concept|,[],[],{},[]),"Rascal/Libraries/LabeledGraph/bottom":concept("Rascal/Libraries/LabeledGraph/bottom",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/bottom/bottom.concept|,[],[],{},[]),"Rascal/Expressions/StatementAsExpression":concept("Rascal/Expressions/StatementAsExpression",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/StatementAsExpression/StatementAsExpression.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/GreaterThanOrEqual":concept("Rascal/Expressions/Values/String/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","bool","str"},[]),"Rascal/Libraries/IO/readFileLines":concept("Rascal/Libraries/IO/readFileLines",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/readFileLines/readFileLines.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/arbReal":concept("Rascal/Expressions/Values/Number/arbReal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/arbReal/arbReal.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/head":concept("Rascal/Expressions/Values/List/head",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/head/head.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/Set":concept("Rascal/Patterns/Abstract/Set",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Set/Set.concept|,[],[],{"}",",","{"},[]),"Rascal/Expressions/Values/Set/getOneFrom":concept("Rascal/Expressions/Values/Set/getOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/getOneFrom/getOneFrom.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node/Equal":concept("Rascal/Expressions/Values/Node/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/Equal/Equal.concept|,[],[],{"bool","node","=="},[]),"Rascal/Statements/Solve":concept("Rascal/Statements/Solve",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Solve/Solve.concept|,[],[],{"solve",",",";",")","("},[]),"Rascal/Expressions/Call":concept("Rascal/Expressions/Call",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Call/Call.concept|,[],[],{",",")","("},[]),"Rascal/Declarations/AlgebraicDataType":concept("Rascal/Declarations/AlgebraicDataType",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/AlgebraicDataType/AlgebraicDataType.concept|,[],[],{"=","|",";","data"},[]),"Rascal/Expressions/Values/Map/toString":concept("Rascal/Expressions/Values/Map/toString",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/toString/toString.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/CarthesianProduct":concept("Rascal/Expressions/Values/Relation/CarthesianProduct",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/CarthesianProduct/CarthesianProduct.concept|,[],[],{"]",",","[","*","rel","set"},[]),"Rascal/Libraries/Resources/dependencies":concept("Rascal/Libraries/Resources/dependencies",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/dependencies/dependencies.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/Equal":concept("Rascal/Expressions/Values/Map/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Equal/Equal.concept|,[],[],{"]",",","map","[","bool","=="},[]),"Rascal/Expressions/Values/Map/in":concept("Rascal/Expressions/Values/Map/in",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/in/in.concept|,[],[],{"]",",","map","[","bool","in"},[]),"Rascal/Expressions/Values/Location":concept("Rascal/Expressions/Values/Location",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/Location.concept|,[],[],{"\>","|",",","\<",")","(","loc"},[]),"Rascal/Libraries/JDT/matchLocations":concept("Rascal/Libraries/JDT/matchLocations",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/matchLocations/matchLocations.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/ColorModel":concept("Rascal/Libraries/Vis/Figure/ColorModel",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/ColorModel.concept|,[],[],{"int","=",";","Color","alias"},[]),"Rascal/Libraries/Vis/TestVis":concept("Rascal/Libraries/Vis/TestVis",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/TestVis/TestVis.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/KeySym":concept("Rascal/Libraries/Vis/Figure/Properties/KeySym",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/KeySym/KeySym.concept|,[],[],{"keyKeypad2","keyKeypad1","keyKeypad0","keyEnd","|","keyShiftRight","keyInsert","keyNumLock","keyAltRight","keyAltLeft","int","keyCode","keyKeypadDivide","keyUnknown","keyPrintable","keyKeypadCr","keyKeypadEqual","keyBreak","key","keyHome","keyScrollLock","keyPause","keyKeypadMultiply","keyF9","keyArrowRight","keyF8","keyPageDown","keyF7","keyF6","keyF5","keyF4","keyF3","keyF2","keyF1","keyPageUp","keyKeypadSubtract","keyF20","keyHelp","keyEscape","keyBackSpace","keyKeypadDecimal","keyControlRight","=","keyEnter","keyTab",");","str","keyF19","keyF18","keyF17","keyF16","keyArrowDown","keyF15","keyCapsLock","keyF14","data","keyF13",")","(","keyF12","keyF11","keyF10","keyControlLeft","keyArrowUp","keyPrintScreen","keyCommandLeft","keyArrowLeft","keyCommandRight","keyKeypadAdd","keyShiftLeft","KeySym","keyKeypad9","keyKeypad8","keyKeypad7","keyKeypad6","keyKeypad5","keyKeypad4","()","keyKeypad3"},[]),"Rascal/Libraries/Vis/Figure/Properties/right":concept("Rascal/Libraries/Vis/Figure/Properties/right",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/right/right.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/abs":concept("Rascal/Expressions/Values/Number/abs",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/abs/abs.concept|,[],[],{},[tvQuestion("Rascal/Expressions/Values/Number/abs","1",typeOfExpr(),details(" ",["import Number;"],"","","abs(\<A:int\>)","",false,false,[<"A",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/abs","2",typeOfExpr(),details(" ",["import Number;"],"","","abs(\<A:real\>)","",false,false,[<"A",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/abs","3",valueOfExpr(),details(" ",["import Number;"],"","","abs(\<A:int[-20,-1]\>)","",false,false,[<"A",int(-20,-1)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/abs","4",valueOfExpr(),details(" ",["import Number;"],"","","abs(\<A:real[-20,-1]\>)","",false,false,[<"A",real(-20,-1)>],[],void(),""))]),"Rascal/Libraries/IO/readFile":concept("Rascal/Libraries/IO/readFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/readFile/readFile.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/NotEqual":concept("Rascal/Expressions/Values/List/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/NotEqual/NotEqual.concept|,[],[],{"list","]","!=","[","bool"},[tvQuestion("Rascal/Expressions/Values/List/NotEqual","1",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> != \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Figures/edge":concept("Rascal/Libraries/Vis/Figure/Figures/edge",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/edge/edge.concept|,[],[],{},[]),"Rascal/Expressions/Values/Tuple/NotEqual":concept("Rascal/Expressions/Values/Tuple/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/NotEqual/NotEqual.concept|,[],[],{"]","!=",",","[","bool","tuple"},[]),"Rascal/Declarations/SyntaxDefinition/Disambiguation/Associativity":concept("Rascal/Declarations/SyntaxDefinition/Disambiguation/Associativity",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Disambiguation/Associativity/Associativity.concept|,[],[],{"=","-","non","|","right",")","(","left","assoc","syntax"},[]),"Rascal/Libraries/Message/warning":concept("Rascal/Libraries/Message/warning",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Message/warning/warning.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/endGap":concept("Rascal/Libraries/Vis/Figure/Properties/endGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/endGap/endGap.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/orientation":concept("Rascal/Libraries/Vis/Figure/Properties/orientation",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/orientation/orientation.concept|,[],[],{"=","|","();","data","topDown","leftRight","downTop","rightLeft","()","Orientation"},[]),"Rascal/Expressions/Values/Number/Conditional":concept("Rascal/Expressions/Values/Number/Conditional",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Conditional/Conditional.concept|,[],[],{"int","?","real","bool",":"},[tvQuestion("Rascal/Expressions/Values/Number/Conditional","1",typeOfExpr(),details(" ",[],"","","(\<A:int\> \> \<B:int\>) ? \<C:int\> : \<D:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",int(-20,20)>,<"D",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Conditional","2",typeOfExpr(),details(" ",[],"","","(\<A:int\> \> \<B:int\>) ? \<C:real\> : \<D:real\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",real(-20,20)>,<"D",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Conditional","3",typeOfExpr(),details(" ",[],"","","(\<A:int\> \> \<B:int\>) ? \<C:int\> : \<D:real\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",int(-20,20)>,<"D",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Conditional","4",valueOfExpr(),details(" ",[],"","","(\<A:int\> \> \<B:int\>) ? \<C:int\> : \<D:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",int(-20,20)>,<"D",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Conditional","5",valueOfExpr(),details(" ",[],"","","(\<A:int\> \> \<B:int\>) ? \<C:int\> : \<D:real\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>,<"C",int(-20,20)>,<"D",real(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/Real":concept("Rascal/Expressions/Values/Real",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Real/Real.concept|,[],[],{"Real","real","import"},[tvQuestion("Rascal/Expressions/Values/Real","1",typeOfExpr(),details(" ",[],"","","\<A:real\>","",false,false,[<"A",real(-20,20)>],[],void(),""))]),"Rascal/Expressions/Visit":concept("Rascal/Expressions/Visit",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Visit/Visit.concept|,[],[],{"}","visit","{",";",":",")","(","Strategy","default","case"},[]),"Rascal/Expressions/Values/Tuple/GreaterThanOrEqual":concept("Rascal/Expressions/Values/Tuple/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","]",",","[","bool","tuple"},[]),"Rascal/Expressions/Values/DateTime":concept("Rascal/Expressions/Values/DateTime",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/DateTime.concept|,[],[],{"DateTime",";","datetime","import"},[]),"Rascal/Libraries/Vis/Figure/ColorModel/colorScale":concept("Rascal/Libraries/Vis/Figure/ColorModel/colorScale",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/colorScale/colorScale.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/hscrollable":concept("Rascal/Libraries/Vis/Figure/Figures/hscrollable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/hscrollable/hscrollable.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/toLowerCase":concept("Rascal/Expressions/Values/String/toLowerCase",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/toLowerCase/toLowerCase.concept|,[],[],{},[]),"Rascal/Statements/Assert":concept("Rascal/Statements/Assert",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Assert/Assert.concept|,[],[],{"bool",":","assert","str"},[]),"Rascal":concept("Rascal",|std:///experiments/RascalTutor/Courses/Rascal/Rascal.concept|,[],["Contents","Motivation","InstallingAndRunning","Concepts","Declarations","Patterns","Expressions","Statements","Libraries"],{},[]),"Rascal/Libraries/RSF/readRSF":concept("Rascal/Libraries/RSF/readRSF",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/RSF/readRSF/readRSF.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/NoMatch":concept("Rascal/Expressions/Values/Boolean/NoMatch",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/NoMatch/NoMatch.concept|,[],[],{"bool","!:=","value"},[]),"Rascal/Expressions/Values/Node/makeNode":concept("Rascal/Expressions/Values/Node/makeNode",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/makeNode/makeNode.concept|,[],[],{},[]),"Rascal/Libraries/Benchmark/systemTime":concept("Rascal/Libraries/Benchmark/systemTime",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Benchmark/systemTime/systemTime.concept|,[],[],{},[]),"Rascal/Expressions/Values/Void":concept("Rascal/Expressions/Values/Void",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Void/Void.concept|,[],[],{"void"},[]),"Rascal/Expressions/Values/List/Intersection":concept("Rascal/Expressions/Values/List/Intersection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Intersection/Intersection.concept|,[],[],{"list","]",",","[","lub","(","&",")]"},[]),"Rascal/Expressions/Values/Node/arity":concept("Rascal/Expressions/Values/Node/arity",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/arity/arity.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/toReal":concept("Rascal/Expressions/Values/String/toReal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/toReal/toReal.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/mapper":concept("Rascal/Expressions/Values/Set/mapper",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/mapper/mapper.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/Subscription":concept("Rascal/Expressions/Values/Relation/Subscription",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Subscription/Subscription.concept|,[],[],{"int","]",",","[","rel","set"},[]),"Rascal/Expressions/Values/Tuple/LessThanOrEqual":concept("Rascal/Expressions/Values/Tuple/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"]",",","[","bool","tuple","\<="},[]),"Rascal/Expressions/Values/List/sort":concept("Rascal/Expressions/Values/List/sort",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/sort/sort.concept|,[],[],{},[]),"Rascal/Statements/Switch":concept("Rascal/Statements/Switch",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Switch/Switch.concept|,[],[],{"}","{",";",":",")","(","switch","default","case"},[]),"Rascal/Libraries/Vis/Figure/Properties/vshadowPos":concept("Rascal/Libraries/Vis/Figure/Properties/vshadowPos",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vshadowPos/vshadowPos.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/toReal":concept("Rascal/Expressions/Values/Boolean/toReal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/toReal/toReal.concept|,[],[],{},[]),"Rascal/Expressions/Values/Boolean/Any":concept("Rascal/Expressions/Values/Boolean/Any",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/Any/Any.concept|,[],[],{",","any","bool",")","("},[]),"Rascal/Concepts/Comprehensions":concept("Rascal/Concepts/Comprehensions",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/Comprehensions/Comprehensions.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/toString":concept("Rascal/Expressions/Values/Set/toString",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/toString/toString.concept|,[],[],{},[]),"Rascal/Libraries/PriorityQueue/extractMinimum":concept("Rascal/Libraries/PriorityQueue/extractMinimum",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/extractMinimum/extractMinimum.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/SubSet":concept("Rascal/Expressions/Values/Set/SubSet",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/SubSet/SubSet.concept|,[],[],{"]","[","bool","set","\<="},[tvQuestion("Rascal/Expressions/Values/Set/SubSet","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,real]]\> \<= \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Vis/Figure/Figures/vscreen":concept("Rascal/Libraries/Vis/Figure/Figures/vscreen",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/vscreen/vscreen.concept|,[],[],{},[]),"Rascal/Libraries/IO":concept("Rascal/Libraries/IO",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/IO.concept|,[],[],{";","IO","import"},[]),"Rascal/Expressions/Values/List/domain":concept("Rascal/Expressions/Values/List/domain",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/domain/domain.concept|,[],[],{},[]),"Rascal/Statements/Append":concept("Rascal/Statements/Append",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Append/Append.concept|,[],[],{"append"},[]),"Rascal/Libraries/Vis/Figure/Properties/project":concept("Rascal/Libraries/Vis/Figure/Properties/project",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/project/project.concept|,[],[],{},[]),"Rascal/Libraries/Scripting/shell":concept("Rascal/Libraries/Scripting/shell",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Scripting/shell/shell.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/SuperList":concept("Rascal/Expressions/Values/List/SuperList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/SuperList/SuperList.concept|,[],[],{"\>=","list","]","[","bool"},[tvQuestion("Rascal/Expressions/Values/List/SuperList","1",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> \>= \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Boolean/And":concept("Rascal/Expressions/Values/Boolean/And",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/And/And.concept|,[],[],{"bool","&&"},[]),"Rascal/Libraries/Vis/Figure/Properties/fontColor":concept("Rascal/Libraries/Vis/Figure/Properties/fontColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/fontColor/fontColor.concept|,[],[],{},[]),"Rascal/Declarations/StaticTyping":concept("Rascal/Declarations/StaticTyping",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/StaticTyping/StaticTyping.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties":concept("Rascal/Libraries/Vis/Figure/Properties",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/Properties.concept|,[],[],{"real","];","list","=","FProperty","[","();","computedNum","FProperties","computedColor","str","alias","int","computedReal","num","computedStr","Color","computedInt"},[]),"Rascal/Expressions/Values/String/left":concept("Rascal/Expressions/Values/String/left",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/left/left.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/overlay":concept("Rascal/Libraries/Vis/Figure/Figures/overlay",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/overlay/overlay.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/size":concept("Rascal/Expressions/Values/String/size",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/size/size.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/width":concept("Rascal/Libraries/Vis/Figure/Properties/width",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/width/width.concept|,[],[],{},[]),"Rascal/Expressions/Comprehensions/Enumerator":concept("Rascal/Expressions/Comprehensions/Enumerator",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Comprehensions/Enumerator/Enumerator.concept|,[],[],{"\<-"},[]),"Rascal/Expressions/Values/List/permutations":concept("Rascal/Expressions/Values/List/permutations",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/permutations/permutations.concept|,[],[],{},[]),"Rascal/Expressions/Values/Integer":concept("Rascal/Expressions/Values/Integer",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Integer/Integer.concept|,[],[],{"int","Integer","import"},[tvQuestion("Rascal/Expressions/Values/Integer","1",typeOfExpr(),details(" ",[],"","","\<A:int\>","",false,false,[<"A",int(-20,20)>],[],void(),""))]),"Rascal/Libraries/IO/exists":concept("Rascal/Libraries/IO/exists",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/exists/exists.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value/GreaterThanOrEqual":concept("Rascal/Expressions/Values/Value/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/GreaterThanOrEqual/GreaterThanOrEqual.concept|,["Rascal implementation: broken","Static Error: prompt:///:1,0: \>= not supported on value and valueStatic Error: prompt:///:1,0: \>= not supported on value and value"],[],{"\>=","bool","value"},[]),"Rascal/Expressions/Values/Map/Union":concept("Rascal/Expressions/Values/Map/Union",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Union/Union.concept|,[],[],{"]",",","map","+","[",")","lub","(","),"},[]),"Rascal/Expressions/Values/Boolean/IsDefined":concept("Rascal/Expressions/Values/Boolean/IsDefined",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/IsDefined/IsDefined.concept|,[],[],{"?","bool"},[]),"Rascal/Libraries/Vis/Figure/Figures/choice":concept("Rascal/Libraries/Vis/Figure/Figures/choice",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/choice/choice.concept|,[],[],{},[]),"Rascal/Expressions/Values/DateTime/NotEqual":concept("Rascal/Expressions/Values/DateTime/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/DateTime/NotEqual/NotEqual.concept|,[],[],{"!=","datetime","bool"},[]),"Rascal/Libraries/Vis/Figure/Figures/outline":concept("Rascal/Libraries/Vis/Figure/Figures/outline",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/outline/outline.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/fontNames":concept("Rascal/Libraries/Vis/Figure/Properties/fontNames",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/fontNames/fontNames.concept|,["Uncaught Rascal Exception: prompt:///:1,0: Java(\"Invalid thread access\")"],[],{},[]),"Rascal/Expressions/Values/String/isEmpty":concept("Rascal/Expressions/Values/String/isEmpty",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/isEmpty/isEmpty.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/halign":concept("Rascal/Libraries/Vis/Figure/Properties/halign",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/halign/halign.concept|,[],[],{},[]),"Rascal/Expressions/Values/Location/GreaterThan":concept("Rascal/Expressions/Values/Location/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/GreaterThan/GreaterThan.concept|,[],[],{"\>","bool","loc"},[]),"Rascal/Libraries/JDT/extractResources":concept("Rascal/Libraries/JDT/extractResources",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/extractResources/extractResources.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure":concept("Rascal/Libraries/Vis/Figure",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figure.concept|,[],[],{";","import","Figure","vis","::"},[]),"Rascal/Libraries/Vis/Figure/Properties/onClick":concept("Rascal/Libraries/Vis/Figure/Properties/onClick",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onClick/onClick.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/textfield":concept("Rascal/Libraries/Vis/Figure/Figures/textfield",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/textfield/textfield.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/reducer":concept("Rascal/Expressions/Values/Set/reducer",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/reducer/reducer.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/Intersection":concept("Rascal/Expressions/Values/Set/Intersection",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/Intersection/Intersection.concept|,[],[],{"]",",","[","lub","(","&",")]","set"},[choiceQuestion("Rascal/Expressions/Values/Set/Intersection","1","  When you compute the intersection of two sets, the number of elements in the result is always:\n",[good("Smaller than or equal the number of elements in both sets."),bad("Greater than the number of elements in both sets."),bad("Greater than or equal the number of elements in both sets."),bad("Smaller than the number of elements in both sets.")]),tvQuestion("Rascal/Expressions/Values/Set/Intersection","2",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str]]\> & \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Intersection","3",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> & \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Set/Intersection","4",valueOfExpr(),details(" ",[],"","","\<A:set[arb[0,int,str,num,real]]\> & \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Declarations/Tag":concept("Rascal/Declarations/Tag",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Tag/Tag.concept|,["To be provided"],[],{},[]),"Rascal/Expressions/Values/Boolean/All":concept("Rascal/Expressions/Values/Boolean/All",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/All/All.concept|,[],[],{",","bool",")","(","all"},[]),"Rascal/Expressions/Values/Value/LessThanOrEqual":concept("Rascal/Expressions/Values/Value/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/LessThanOrEqual/LessThanOrEqual.concept|,["Rascal implementation: broken","Static Error: prompt:///:1,0: \<= not supported on value and valueStatic Error: prompt:///:1,0: \<= not supported on value and value"],[],{"bool","\<=","value"},[]),"Rascal/Expressions/Values/List/toMap":concept("Rascal/Expressions/Values/List/toMap",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/toMap/toMap.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/toInt":concept("Rascal/Expressions/Values/Number/toInt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/toInt/toInt.concept|,[],[],{},[]),"Rascal/Expressions/Values/Location/LessThan":concept("Rascal/Expressions/Values/Location/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/LessThan/LessThan.concept|,[],[],{"\<","bool","loc"},[]),"Rascal/Expressions/Replacement":concept("Rascal/Expressions/Replacement",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Replacement/Replacement.concept|,[],[],{"=","]","[@"},[]),"Rascal/Expressions/Values/List/StrictSubList":concept("Rascal/Expressions/Values/List/StrictSubList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/StrictSubList/StrictSubList.concept|,[],[],{"list","]","\<","[","bool"},[tvQuestion("Rascal/Expressions/Values/List/StrictSubList","1",typeOfExpr(),details(" ",[],"","","\<A:list[arb]\> \< \<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Tuple/Subscription":concept("Rascal/Expressions/Values/Tuple/Subscription",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/Subscription/Subscription.concept|,[],[],{"]","["},[]),"Rascal/Expressions/Values/List/getOneFrom":concept("Rascal/Expressions/Values/List/getOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/getOneFrom/getOneFrom.concept|,[],[],{},[]),"Rascal/Libraries/LabeledGraph":concept("Rascal/Libraries/LabeledGraph",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/LabeledGraph.concept|,[],[],{"];","=","]","L",",","to","[&",";","LabeledGraph","from","rel","&","import","label","T","LGraph","alias"},[]),"Rascal/Expressions/Operators":concept("Rascal/Expressions/Operators",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Operators/Operators.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/index":concept("Rascal/Expressions/Values/List/index",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/index/index.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/text":concept("Rascal/Libraries/Vis/Figure/Figures/text",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/text/text.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vgrow":concept("Rascal/Libraries/Vis/Figure/Properties/vgrow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vgrow/vgrow.concept|,[],[],{},[]),"Rascal/Libraries/Message":concept("Rascal/Libraries/Message",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Message/Message.concept|,[],[],{"info","=","|","warning",",","data",")","(","error","Message","at",");","msg","str","loc"},[]),"Rascal/Expressions/Values/Boolean/fromInt":concept("Rascal/Expressions/Values/Boolean/fromInt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Boolean/fromInt/fromInt.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/Literal":concept("Rascal/Patterns/Abstract/Literal",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Literal/Literal.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/Subscription":concept("Rascal/Expressions/Values/Map/Subscription",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/Subscription/Subscription.concept|,[],[],{"]",",","map","["},[]),"Rascal/Libraries/Vis/Figure/Properties/hcenter":concept("Rascal/Libraries/Vis/Figure/Properties/hcenter",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hcenter/hcenter.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/onKeyUp":concept("Rascal/Libraries/Vis/Figure/Properties/onKeyUp",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onKeyUp/onKeyUp.concept|,[],[],{},[]),"Rascal/Statements/Insert":concept("Rascal/Statements/Insert",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Insert/Insert.concept|,[],[],{";","insert"},[]),"Rascal/Declarations/SyntaxDefinition/Action":concept("Rascal/Declarations/SyntaxDefinition/Action",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Action/Action.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/rotate":concept("Rascal/Libraries/Vis/Figure/Figures/rotate",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/rotate/rotate.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vsize":concept("Rascal/Libraries/Vis/Figure/Properties/vsize",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vsize/vsize.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/ColorModel/color":concept("Rascal/Libraries/Vis/Figure/ColorModel/color",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/color/color.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/toList":concept("Rascal/Expressions/Values/Set/toList",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/toList/toList.concept|,[],[],{},[]),"Rascal/Libraries/JDT/isOnBuildPath":concept("Rascal/Libraries/JDT/isOnBuildPath",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/isOnBuildPath/isOnBuildPath.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/domainX":concept("Rascal/Expressions/Values/Relation/domainX",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/domainX/domainX.concept|,[],[],{},[]),"Rascal/Expressions/Values/String/charAt":concept("Rascal/Expressions/Values/String/charAt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/charAt/charAt.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/domainR":concept("Rascal/Expressions/Values/Relation/domainR",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/domainR/domainR.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/area":concept("Rascal/Libraries/Vis/Figure/Properties/area",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/area/area.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition":concept("Rascal/Declarations/SyntaxDefinition",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/SyntaxDefinition.concept|,[],[],{"\>","non","-","=","|","right",";","layout",":","keyword",")","(","left","assoc","lexical","syntax","start"},[]),"Rascal/Expressions/Values/Set/in":concept("Rascal/Expressions/Values/Set/in",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/in/in.concept|,[],[],{"]","[","bool","in","set"},[]),"Rascal/Expressions/Values/Number/Division":concept("Rascal/Expressions/Values/Number/Division",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Division/Division.concept|,[],[],{"/","int","real"},[tvQuestion("Rascal/Expressions/Values/Number/Division","1",typeOfExpr(),details(" ",[],"","","\<A:int\> / \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Division","2",typeOfExpr(),details(" ",[],"","","\<A:int\> / \<B:real\>","",false,false,[<"A",int(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Division","3",typeOfExpr(),details(" ",[],"","","\<A:real\> / \<B:int\>","",false,false,[<"A",real(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Division","4",valueOfExpr(),details(" ",[],"","","\<A:num\> / \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Libraries/LabeledGraph/reachX":concept("Rascal/Libraries/LabeledGraph/reachX",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/reachX/reachX.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/invert":concept("Rascal/Expressions/Values/Map/invert",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/invert/invert.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/ellipse":concept("Rascal/Libraries/Vis/Figure/Figures/ellipse",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/ellipse/ellipse.concept|,[],[],{},[]),"Rascal/Libraries/LabeledGraph/top":concept("Rascal/Libraries/LabeledGraph/top",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/top/top.concept|,[],[],{},[]),"Rascal/Libraries/JDT/extractFactsTransitive":concept("Rascal/Libraries/JDT/extractFactsTransitive",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/JDT/extractFactsTransitive/extractFactsTransitive.concept|,[],[],{},[]),"Rascal/Motivation":concept("Rascal/Motivation",|std:///experiments/RascalTutor/Courses/Rascal/Motivation/Motivation.concept|,[],[],{},[]),"Rascal/Libraries/Graph/top":concept("Rascal/Libraries/Graph/top",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/top/top.concept|,[],[],{},[]),"Rascal/Libraries/LabeledGraph/reachR":concept("Rascal/Libraries/LabeledGraph/reachR",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/LabeledGraph/reachR/reachR.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/layer":concept("Rascal/Libraries/Vis/Figure/Properties/layer",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/layer/layer.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/justify":concept("Rascal/Libraries/Vis/Figure/Properties/justify",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/justify/justify.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/lineColor":concept("Rascal/Libraries/Vis/Figure/Properties/lineColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/lineColor/lineColor.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/AmbiguityDiagnosis":concept("Rascal/Declarations/SyntaxDefinition/AmbiguityDiagnosis",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDiagnosis/AmbiguityDiagnosis.concept|,["Reference to unknown course or concept: Rascal:DrAmbiguity"],[],{},[]),"Rascal/Expressions/Values/Set/StrictSubSet":concept("Rascal/Expressions/Values/Set/StrictSubSet",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/StrictSubSet/StrictSubSet.concept|,[],[],{"]","\<","[","bool","set"},[tvQuestion("Rascal/Expressions/Values/Set/StrictSubSet","1",typeOfExpr(),details(" ",[],"","","\<A:set[arb]\> \< \<B:same[A]\>","",false,false,[<"A",set(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Expressions/Values/Value/LessThan":concept("Rascal/Expressions/Values/Value/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/LessThan/LessThan.concept|,["Rascal implementation: broken","Static Error: prompt:///:1,0: \< not supported on value and valueStatic Error: prompt:///:1,0: \< not supported on value and value"],[],{"\<","bool","value"},[]),"Rascal/InstallingAndRunning/Running/Help":concept("Rascal/InstallingAndRunning/Running/Help",|std:///experiments/RascalTutor/Courses/Rascal/InstallingAndRunning/Running/Help/Help.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/scrollable":concept("Rascal/Libraries/Vis/Figure/Figures/scrollable",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/scrollable/scrollable.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/hvcat":concept("Rascal/Libraries/Vis/Figure/Figures/hvcat",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/hvcat/hvcat.concept|,[],[],{},[]),"Rascal/Statements/For":concept("Rascal/Statements/For",|std:///experiments/RascalTutor/Courses/Rascal/Statements/For/For.concept|,[],[],{",",";","for",")","("},[]),"Rascal/Libraries/Benchmark":concept("Rascal/Libraries/Benchmark",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Benchmark/Benchmark.concept|,[],[],{"Benchmark",";","import"},[]),"Rascal/Expressions/Values/Number/Equal":concept("Rascal/Expressions/Values/Number/Equal",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Equal/Equal.concept|,[],[],{"int","real","bool","=="},[tvQuestion("Rascal/Expressions/Values/Number/Equal","1",typeOfExpr(),details(" ",[],"","","\<A:int\> == \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Equal","2",typeOfExpr(),details(" ",[],"","","\<A:real\> == \<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Equal","3",typeOfExpr(),details(" ",[],"","","\<A:num\> == \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Equal","4",typeOfExpr(),details(" ",[],"","","\<A:num\> == \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Equal","5",valueOfExpr(),details(" ",[],"","","\<A:num\> == \<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Libraries/IO/appendToFile":concept("Rascal/Libraries/IO/appendToFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/appendToFile/appendToFile.concept|,[],[],{},[]),"Rascal/Concepts/ControlStructures":concept("Rascal/Concepts/ControlStructures",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/ControlStructures/ControlStructures.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node/NotEqual":concept("Rascal/Expressions/Values/Node/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/NotEqual/NotEqual.concept|,[],[],{"!=","bool","node"},[]),"Rascal/Libraries/ParseTree":concept("Rascal/Libraries/ParseTree",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ParseTree/ParseTree.concept|,[],[],{";","import","ParseTree"},[]),"Rascal/Libraries/IO/isDirectory":concept("Rascal/Libraries/IO/isDirectory",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/isDirectory/isDirectory.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/Remainder":concept("Rascal/Expressions/Values/Number/Remainder",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/Remainder/Remainder.concept|,[],[],{"int","%"},[tvQuestion("Rascal/Expressions/Values/Number/Remainder","1",typeOfExpr(),details(" ",[],"","","\<A:int\> % \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/Remainder","2",valueOfExpr(),details(" ",[],"","","\<A:int\> % \<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/String/Concatenation":concept("Rascal/Expressions/Values/String/Concatenation",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/Concatenation/Concatenation.concept|,[],[],{"+","str"},[]),"Rascal/Libraries/Vis/Figure/Properties/textAngle":concept("Rascal/Libraries/Vis/Figure/Properties/textAngle",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/textAngle/textAngle.concept|,[],[],{},[]),"Rascal/Statements/While":concept("Rascal/Statements/While",|std:///experiments/RascalTutor/Courses/Rascal/Statements/While/While.concept|,[],[],{";",")","(","while"},[]),"Rascal/Libraries/Vis/Figure/Properties/font":concept("Rascal/Libraries/Vis/Figure/Properties/font",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/font/font.concept|,[],[],{},[]),"Rascal/Libraries/Resources/getProject":concept("Rascal/Libraries/Resources/getProject",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/getProject/getProject.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/hendGap":concept("Rascal/Libraries/Vis/Figure/Properties/hendGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hendGap/hendGap.concept|,[],[],{},[]),"Rascal/Libraries/Graph/bottom":concept("Rascal/Libraries/Graph/bottom",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/bottom/bottom.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/fillColor":concept("Rascal/Libraries/Vis/Figure/Properties/fillColor",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/fillColor/fillColor.concept|,[],[],{},[]),"Rascal/Expressions/Values/Node/LessThanOrEqual":concept("Rascal/Expressions/Values/Node/LessThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/LessThanOrEqual/LessThanOrEqual.concept|,[],[],{"bool","node","\<="},[]),"Rascal/Concepts/CaseDistinction":concept("Rascal/Concepts/CaseDistinction",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/CaseDistinction/CaseDistinction.concept|,[],[],{},[]),"Rascal/Expressions/Values/Location/GreaterThanOrEqual":concept("Rascal/Expressions/Values/Location/GreaterThanOrEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/GreaterThanOrEqual/GreaterThanOrEqual.concept|,[],[],{"\>=","bool","loc"},[]),"Rascal/Libraries/PriorityQueue/findMinimum":concept("Rascal/Libraries/PriorityQueue/findMinimum",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/findMinimum/findMinimum.concept|,[],[],{},[]),"Rascal/Declarations/Program":concept("Rascal/Declarations/Program",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/Program/Program.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/toArrow":concept("Rascal/Libraries/Vis/Figure/Properties/toArrow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/toArrow/toArrow.concept|,[],[],{},[]),"Rascal/Expressions/Values/List":concept("Rascal/Expressions/Values/List",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/List.concept|,[],[],{"List","]",",","[","lub","(","import",")]","set"},[]),"Rascal/Expressions/Values/String/GreaterThan":concept("Rascal/Expressions/Values/String/GreaterThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/GreaterThan/GreaterThan.concept|,[],[],{"\>","bool","str"},[]),"Rascal/Expressions/Values/String/NotEqual":concept("Rascal/Expressions/Values/String/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/String/NotEqual/NotEqual.concept|,[],[],{"!=","bool","str"},[]),"Rascal/Concepts/RewriteRules":concept("Rascal/Concepts/RewriteRules",|std:///experiments/RascalTutor/Courses/Rascal/Concepts/RewriteRules/RewriteRules.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/Join":concept("Rascal/Expressions/Values/Relation/Join",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Join/Join.concept|,[],[],{"]",",","[","join","rel"},[]),"Rascal/Libraries/Graph/successors":concept("Rascal/Libraries/Graph/successors",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Graph/successors/successors.concept|,[],[],{},[]),"Rascal/Patterns/Abstract":concept("Rascal/Patterns/Abstract",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Abstract.concept|,[],["Literal","VariableDeclaration","MultiVariable","Variable","List","Set","Tuple","Node","Descendant","Labelled","TypedLabelled","TypeConstrained"],{"/","\>","]","}",",","\<","[","{","*",":",")","("},[]),"Rascal/Libraries/Vis/Figure/Properties/hstartGap":concept("Rascal/Libraries/Vis/Figure/Properties/hstartGap",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/hstartGap/hstartGap.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/getOneFrom":concept("Rascal/Expressions/Values/Map/getOneFrom",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/getOneFrom/getOneFrom.concept|,[],[],{},[]),"Rascal/Expressions/Comprehensions/Filter":concept("Rascal/Expressions/Comprehensions/Filter",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Comprehensions/Filter/Filter.concept|,[],[],{"bool"},[]),"Rascal/Libraries/IO/print":concept("Rascal/Libraries/IO/print",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IO/print/print.concept|,[],[],{},[]),"Rascal/Expressions/Values/Value":concept("Rascal/Expressions/Values/Value",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Value/Value.concept|,[],[],{"value"},[]),"Rascal/Expressions/Values/Number/arbInt":concept("Rascal/Expressions/Values/Number/arbInt",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/arbInt/arbInt.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/grow":concept("Rascal/Libraries/Vis/Figure/Properties/grow",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/grow/grow.concept|,[],[],{},[]),"Rascal/Expressions/Values/Map/domainX":concept("Rascal/Expressions/Values/Map/domainX",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/domainX/domainX.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/ParseTrees":concept("Rascal/Declarations/SyntaxDefinition/ParseTrees",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/ParseTrees/ParseTrees.concept|,[],[],{},[]),"Rascal/Patterns/Abstract/Node":concept("Rascal/Patterns/Abstract/Node",|std:///experiments/RascalTutor/Courses/Rascal/Patterns/Abstract/Node/Node.concept|,[],[],{",",")","("},[]),"Rascal/Expressions/Values/Map/domainR":concept("Rascal/Expressions/Values/Map/domainR",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Map/domainR/domainR.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/ColorModel/rgb":concept("Rascal/Libraries/Vis/Figure/ColorModel/rgb",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/ColorModel/rgb/rgb.concept|,[],[],{},[]),"Rascal/Libraries/Benchmark/userTime":concept("Rascal/Libraries/Benchmark/userTime",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Benchmark/userTime/userTime.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/left":concept("Rascal/Libraries/Vis/Figure/Properties/left",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/left/left.concept|,[],[],{},[]),"Rascal/Declarations/SyntaxDefinition/AmbiguityDetection":concept("Rascal/Declarations/SyntaxDefinition/AmbiguityDetection",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/AmbiguityDetection/AmbiguityDetection.concept|,["Referencetounknowncourseorconcept:Rascal:DrAmbiguity","Referencetounknowncourseorconcept:Rascal:Ambiguity"],[],{},[]),"Rascal/Declarations/SyntaxDefinition/Symbol":concept("Rascal/Declarations/SyntaxDefinition/Symbol",|std:///experiments/RascalTutor/Courses/Rascal/Declarations/SyntaxDefinition/Symbol/Symbol.concept|,[],[],{"?","^","]","|","[","{","\'\\\\\\\\\\\\\\\\\\\\","}+","-","+","*",")","(","\"","!","()","!\>\>","!\<\<","||","&&","@","\>\>","\<\<","\\\\"},[]),"Rascal/Statements/Throw":concept("Rascal/Statements/Throw",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Throw/Throw.concept|,[],[],{"throw"},[]),"Rascal/Libraries/Vis/Figure/Properties/size":concept("Rascal/Libraries/Vis/Figure/Properties/size",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/size/size.concept|,[],[],{},[]),"Rascal/Statements/Test":concept("Rascal/Statements/Test",|std:///experiments/RascalTutor/Courses/Rascal/Statements/Test/Test.concept|,[],[],{},[]),"Rascal/Expressions/Values/Set/notin":concept("Rascal/Expressions/Values/Set/notin",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Set/notin/notin.concept|,[],[],{"]","[","bool","notin","set"},[]),"Rascal/Expressions/Values/Tuple/LessThan":concept("Rascal/Expressions/Values/Tuple/LessThan",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Tuple/LessThan/LessThan.concept|,[],[],{"]","\<",",","[","bool","tuple"},[]),"Rascal/Libraries/ValueIO/writeTextValueFile":concept("Rascal/Libraries/ValueIO/writeTextValueFile",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/ValueIO/writeTextValueFile/writeTextValueFile.concept|,[],[],{},[]),"Rascal/Expressions/Values/Number/NotEqual":concept("Rascal/Expressions/Values/Number/NotEqual",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Number/NotEqual/NotEqual.concept|,[],[],{"int","real","!=","bool"},[tvQuestion("Rascal/Expressions/Values/Number/NotEqual","1",typeOfExpr(),details("",[],"","","\<A:int\>!=\<B:int\>","",false,false,[<"A",int(-20,20)>,<"B",int(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/NotEqual","2",typeOfExpr(),details("",[],"","","\<A:real\>!=\<B:real\>","",false,false,[<"A",real(-20,20)>,<"B",real(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/NotEqual","3",typeOfExpr(),details("",[],"","","\<A:num\>!=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/NotEqual","4",typeOfExpr(),details("",[],"","","\<A:num\>!=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/Number/NotEqual","5",valueOfExpr(),details("",[],"","","\<A:num\>!=\<B:num\>","",false,false,[<"A",num(-20,20)>,<"B",num(-20,20)>],[],void(),""))]),"Rascal/Expressions/Values/List/Product":concept("Rascal/Expressions/Values/List/Product",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/Product/Product.concept|,[],[],{"list","]",",","[","*","tuple","]]"},[tvQuestion("Rascal/Expressions/Values/List/Product","1",typeOfExpr(),details("",[],"","","\<A:list[arb[int,str]]\>*\<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/List/Product","2",typeOfExpr(),details("",[],"","","\<A:list[arb]\>*\<B:same[A]\>","",false,false,[<"A",list(arb(0,[bool(),int(-20,20),real(-20,20),num(-20,20),str(),\loc(),datetime()]))>,<"B",same("A")>],[],void(),"")),tvQuestion("Rascal/Expressions/Values/List/Product","3",valueOfExpr(),details("",[],"","","\<A:list[arb[0,int,str,num,real]]\>*\<B:same[A]\>","",false,false,[<"A",list(arb(0,[int(-20,20),str(),num(-20,20),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Rascal/Libraries/Message/info":concept("Rascal/Libraries/Message/info",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Message/info/info.concept|,[],[],{},[]),"Rascal/Libraries/Scripting/eval":concept("Rascal/Libraries/Scripting/eval",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Scripting/eval/eval.concept|,[],[],{},[]),"Rascal/Expressions/Operators/FieldAssignment":concept("Rascal/Expressions/Operators/FieldAssignment",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Operators/FieldAssignment/FieldAssignment.concept|,[],[],{"=","]","["},[]),"Rascal/Libraries/Resources/references":concept("Rascal/Libraries/Resources/references",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Resources/references/references.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Figures/scaleSlider":concept("Rascal/Libraries/Vis/Figure/Figures/scaleSlider",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Figures/scaleSlider/scaleSlider.concept|,[],[],{},[]),"Rascal/Expressions/Values/Range":concept("Rascal/Expressions/Values/Range",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Range/Range.concept|,[],[],{"]",",","[",".."},[]),"Rascal/Libraries/Benchmark/cpuTime":concept("Rascal/Libraries/Benchmark/cpuTime",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Benchmark/cpuTime/cpuTime.concept|,[],[],{},[]),"Rascal/Libraries/PriorityQueue/isEmpty":concept("Rascal/Libraries/PriorityQueue/isEmpty",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/PriorityQueue/isEmpty/isEmpty.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/onMouseUp":concept("Rascal/Libraries/Vis/Figure/Properties/onMouseUp",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/onMouseUp/onMouseUp.concept|,[],[],{},[]),"Rascal/Libraries/Vis/Figure/Properties/vshrink":concept("Rascal/Libraries/Vis/Figure/Properties/vshrink",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/Vis/Figure/Properties/vshrink/vshrink.concept|,[],[],{},[]),"Rascal/Expressions/Values/Relation/domain":concept("Rascal/Expressions/Values/Relation/domain",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/domain/domain.concept|,[],[],{},[]),"Rascal/Expressions/Values/List/in":concept("Rascal/Expressions/Values/List/in",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/in/in.concept|,[],[],{"list","]","[","bool","in"},[]),"Rascal/Libraries/IDE/Outline":concept("Rascal/Libraries/IDE/Outline",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/Outline/Outline.concept|,[],[],{},[]),"Rascal/Libraries/IDE/Folding":concept("Rascal/Libraries/IDE/Folding",|std:///experiments/RascalTutor/Courses/Rascal/Libraries/IDE/Folding/Folding.concept|,[],[],{"true","=","foldable",";","syntax","a","@"},[])),["!","!:=","!\<\<","!=","!\>\>","\"","\"),","\")?","\")]);","\"\<\"","\"\>\";","#","%","&","&&","\'\\\\\\\\\\\\\\\\\\\\","(","(\"","()","();","([",")","),",");",")]","*","*=","+","+=",",","-","-=",".","..","...\"","...)","/","/*1*/","/=",":","::",":=",";","\<","\<-","\<:","\<\<","\<=","\<==\>","=","==","==\>","=\>","\>","\>=","\>\>","?","?=","@","Abstract","Action","Addition","AlgebraicDataType","Alias","All","AmbiguityDetection","AmbiguityDiagnosis","And","Angles","Annotation","Any","Append","Assert","Assignment","Associativity","Benchmark","BindingRel","Block","Boolean","Bound","Call","CarthesianProduct","CaseDistinction","Color","ColorModel","Composition","CompositionModel","Comprehension","Comprehensions","Concatenation","Concepts","Concrete","ConcreteSyntax","Conditional","Constructor","Contents","ControlStructures","Datatypes","DateTime","Declarations","Descendant","Difference","Disambiguation","Division","Do","DocumentationHover","Entity","EntityRel","EntitySet","Enumerator","Enumerators","Equal","EquationSolving","Equivalence","ErrorMarking","Exception","Expressions","FProperties","FProperty","Fail","FieldAssignment","FieldProjection","FieldSelection","Figure","Figures","Filter","Folding","Follow","For","Function","Functions","Graph","GreaterThan","GreaterThanOrEqual","Help","Hyperlinking","IDE","IDEConstruction","IO","Id","If","IfDefinedElse","ImmutableValues","Implication","Import","Insert","Installing","InstallingAndRunning","Integer","InteractionModel","Intersection","IsDefined","JDT","Java","Join","KeyModifier","KeySym","LGraph","LabeledGraph","Labelled","LessThan","LessThanOrEqual","Libraries","LineDecoration","List","Literal","Location","Map","Match","Menus","Message","Modifier","ModifierRel","Module","Motivation","MultiVariable","Multiplication","Negation","NoMatch","Node","NotEqual","Number","Object","Operators","Or","Orientation","Outline","ParseTree","ParseTrees","Pattern","PatternMatching","PatternWithAction","Patterns","Plugin","Preceed","PrimitiveType","Priority","PriorityQueue","Product","Program","Properties","RSF","Range","Rascal","Real","Reducer","ReflexiveTransitiveClosure","Regular","ReifiedTypes","Relation","Remainder","Render","Replacement","Reserve","Resource","Resources","Return","RewriteRules","Running","Scripting","Selection","Set","Solve","StatementAsExpression","Statements","StaticTyping","Strategy","StrictSubList","StrictSubMap","StrictSubSet","StrictSuperList","StrictSuperMap","StrictSuperSet","String","SubList","SubMap","SubSet","Subscription","Subtraction","SuperList","SuperMap","SuperSet","Switch","Symbol","SyntaxDefinition","SyntaxDefinitionAndParsing","Tag","Test","TestVis","Throw","TransitiveClosure","TryCatch","Tuple","TypeConstrained","TypeConstraints","TypeParameters","TypedLabelled","Union","Value","ValueIO","Values","Variable","VariableDeclaration","Vis","Visit","Visiting","Void","While","[","[&","[@","\\","\\\\","]","];","]]","^","`","abs","align","alt_2","anno","anonymousClass","appendToFile","arbBool","arbColor","arbInt","arbReal","area","arity","array","aspectRatio","assoc","at","bool","bottom","bound","box","button","byte","calls","carrier","carrierR","carrierX","case","catch","center","char","charAt","checkbox","choice","class","classes","color","colorNames","colorScale","colorSteps","combo","complement","computeFigure","computedColor","computedInt","computedNum","computedReal","computedStr","connect","constr","constructors","contains","cpuTime","data","datetime","declaredMethods","declaredSubTypes","declaredTopTypes","default","delete","dependencies","deprecated","doc","domain","domainR","domainX","double","downTop","edge","elementType","ellipse","else","endGap","endsWith","entity","enum","enumConstant","error","escape","eval","evalType","exists","extended","extends","extractClass","extractFactsTransitive","extractMinimum","extractProject","extractResource","extractResources","false","field","fieldDecls","fields","file","fillColor","final","finally","findAll","findMinimum","float","foldable","folder","font","fontColor","fontNames","fontSize","from","fromArrow","fromInt","fswitch","gap","getAnnotations","getName","getOneFrom","getProject","graph","gray","grid","grow","halign","hcat","hcenter","hconnect","head","height","hendGap","hgap","hgrow","highlight","hint","hresizable","hscreen","hscrollable","hshadowPos","hshrink","hsize","hstartGap","hvcat","ialign","id","ident","implements","implode","in","index","info","initializer","insertAt","insertElement","int","interface","interpolateColor","invert","invertUnique","isDirectory","isEmpty","isFile","isOnBuildPath","justify","key","keyAltLeft","keyAltRight","keyArrowDown","keyArrowLeft","keyArrowRight","keyArrowUp","keyBackSpace","keyBreak","keyCapsLock","keyCode","keyCommandLeft","keyCommandRight","keyControlLeft","keyControlRight","keyEnd","keyEnter","keyEscape","keyF1","keyF10","keyF11","keyF12","keyF13","keyF14","keyF15","keyF16","keyF17","keyF18","keyF19","keyF2","keyF20","keyF3","keyF4","keyF5","keyF6","keyF7","keyF8","keyF9","keyHelp","keyHome","keyInsert","keyKeypad0","keyKeypad1","keyKeypad2","keyKeypad3","keyKeypad4","keyKeypad5","keyKeypad6","keyKeypad7","keyKeypad8","keyKeypad9","keyKeypadAdd","keyKeypadCr","keyKeypadDecimal","keyKeypadDivide","keyKeypadEqual","keyKeypadMultiply","keyKeypadSubtract","keyNumLock","keyPageDown","keyPageUp","keyPause","keyPrintScreen","keyPrintable","keyScrollLock","keyShiftLeft","keyShiftRight","keyTab","keyUnknown","keyword","label","lang","lastModified","layer","layout","left","leftRight","level","lexical","lineColor","lineNumber","lineStyle","lineWidth","link","links","listEntries","loc","long","lub","makeNode","manhattan","mapper","matchLocations","max","messages","method","methodDecls","methods","min","mkDirectory","mkPriorityQueue","modAlt","modCommand","modCtrl","modShift","modifier","modifiers","mouseOver","msg","name","native","non","notin","nr","null","num","onClick","onKeyDown","onKeyUp","onMouseDown","onMouseEnter","onMouseExit","onMouseMove","onMouseUp","orientation","outline","overlay","pack","package","packages","pad","palette","parameter","params","parse","permutations","power","power1","predecessors","primType","primitive","print","println","private","project","projects","protected","public","range","rangeR","rangeX","reach","reachR","reachX","readBinaryValueFile","readFile","readFileBytes","readFileLines","readRSF","readTextValueFile","readTextValueString","reducer","references","rel","render","renderSave","replaceAll","replaceFirst","replaceLast","resizable","returnType","reverse","rgb","right","rightLeft","root","rotate","scale","scaleSlider","scrollable","setAnnotations","shadow","shadowColor","shadowPos","shapeClosed","shapeConnected","shapeCurved","shell","short","shortestPathPair","shrink","size","slice","sort","space","start","startGap","startsWith","static","std","str","strictfp","substring","successors","super","synchronized","syntax","systemTime","tail","takeOneFrom","text","textAngle","textfield","throws","timer","to","toArrow","toInt","toList","toLowerCase","toMap","toMapUnique","toReal","toRel","toSet","toString","toUpperCase","top","topDown","transient","tree","treemap","true","try","type","typeParameter","types","unparse","userTime","util","valign","variables","vcat","vcenter","vconnect","vendGap","vgap","vgrow","volatile","vresizable","vscreen","vscrollable","vshadowPos","vshrink","vsize","vstartGap","warning","width","wildcard","writeBinaryValueFile","writeFile","writeTextValueFile","{","|","||","}","}+"])
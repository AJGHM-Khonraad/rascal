License: Copyright (c) 2009-2011 CWI
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
Contributors:
* Paul Klint - Paul.Klint@cwi.nl - CWI

Name: Figure

Details:

Categories: Library

Syntax:

Types:

Function:

Synopsis: `import vis::Figure;`

Description: The Figure library provides visualization functionality that
can be used to synthesize information. 
This plays, for example, a role in the synthesis part of the [EASY] paradigm.
It is based on the following principles:
* __Coordinate free__: only intrinsic properties of figures such as their height, width or color have to be specified. 
  Their placement and actual coordinates are computed automatically.
* __Compositional__: figures can be composed in many ways.
* __Declarative__: the definition of a figure does not has any side-effects like, for example, 
  changing the current drawing location or current drawing color.


More precisely, figures:
* ... are ordinary values that can be computed and manipulated, e.g., by functions.
* ... only describe their own properties like dimensions and color.
* ... are unaware of their actual coordinate position.
* ... can be composed with other figures. Examples are horizontal and vertical composition, 
  placement on a grid, graph or tree.
* ... can be reused in different contexts.


The Figure library provides two data types:
* `FProperty` describes a property of a figure such as (also see [Properties]):
  ** _Positioning_: [Properties/size], [width], [height], [anchor], [hanchor], [vanchor], [gap], [hgap], [vgap], [textAngle].
  ** _Visual appearance_: [lineWidth], [lineColor], [fillColor], [font], [fontSize], [fontColor], [shapeConnected],
     [shapeClosed], [shapeCurved].
  ** _Interaction_: [mouseOver].
  ** _Other_: [id]

* `Figure` describes an actual visual element such as (also see [Figures]):
  ** _Atomic Figures_: [text], [outline].
  ** _Containers_: [box], [ellipse], [wedge], [space].
  ** _Compositions_: [hcat], [vcat], [hvcat], [pack], [grid], [tree], [treemap], [graph].
  ** _Transformations_: [scale], [rotate].



Examples:

Benefits:

Pitfalls:

One of the functions [render] or [renderSave] are needed to actually view a Figure.

Questions:


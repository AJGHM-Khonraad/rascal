concept("Node",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/Node.concept|,[],[],{"Language"},{"Annotation"},""," \<code\>\n  \<i\>Exp\</i\>\<sub\>0\</sub\> ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\n\</code\>\n"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\>\<code\>\n    \<i\>Exp\</i\>\<sub\>0\</sub\>\n  \</code\>  \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\> \</th\>\<th align=\"left\"\> ... \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>0\</sub\> ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      str\n    \</code\>     \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      value\n    \</code\>   \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      value\n    \</code\>   \n  \</td\>\<td align=\"left\"\>\n     ... \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      node\n    \</code\>                              \n  \</td\>\</tr\>\n\</table\>","",{",",")","(","node","str","value"}," Values of type \<code\>\n  node\n\</code\> represent untyped trees and are constructed as follows:\n \<ul\>\n  \<li\> the string value of \<code\>\n    \<i\>Exp\</i\>\<sub\>0\</sub\>\n  \</code\> is the node name;\</li\>\n  \<li\> zero or more expressions of type \<code\>\n    value\n  \</code\> are the node\'\\s children.\</li\>\n  \n\</ul\> Nodes can have \<a href=\"/show?concept=Annotation\"\>Annotation\</a\>s.\n"," \<pre class=\"screen\"\>\</pre\>\n  A node with name \"my_node\" and three arguments\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>&quot;my_node&quot;(1, true, &quot;abc&quot;);\nnode: my_node(1,true,&quot;abc&quot;)\n\</pre\>\n  A nested node structure:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>&quot;my_node1&quot;(1, &quot;my_node2&quot;(3.5, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]), true);\nnode: my_node1(\n  1,\n  my_node2(\n    3.5,\n    [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]),\n  true)\n\</pre\>","","",[])
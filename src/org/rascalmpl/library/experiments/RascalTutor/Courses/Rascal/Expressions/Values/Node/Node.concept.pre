concept("Node",|cwd:///src/org/rascalmpl/library/experiments/RascalTutor/Courses/Rascal/Expressions/Values/Node/Node.concept|,[],{"Language"},{"Annotations"},"","\<code\>\<i\>Exp\</i\>\<sub\>0\</sub\> ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\</code\>\n","\<table\>\<tr\>\<th align=\"left\"\>\<code\>\<i\>Exp\</i\>\<sub\>0\</sub\>\</code\>  \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>1\</sub\>\</code\> \</th\>\<th align=\"left\"\> \<code\>\<i\>Exp\</i\>\<sub\>2\</sub\>\</code\> \</th\>\<th align=\"left\"\> ... \</th\>\<th align=\"center\"\> \<code\>\<i\>Exp\</i\>\<sub\>0\</sub\> ( \<i\>Exp\</i\>\<sub\>1\</sub\>, \<i\>Exp\</i\>\<sub\>2\</sub\>, ... )\</code\> \</th\>\</tr\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<td\> \<code\>str\</code\>     \</td\>\<td\> \<code\>value\</code\>   \</td\>\<td\> \<code\>value\</code\>   \</td\>\<td\> ... \</td\>\<td\> \<code\>node\</code\>                              \</td\>\</tr\>\</table\>","",{"...",",",")","(","node","value","str"},"Values of type \<code\>node\</code\> represent untyped trees and are constructed as follows:\n\<ul\>\n\<li\> the string value of \<code\>\<i\>Exp\</i\>\<sub\>0\</sub\>\</code\> is the node name;\</li\>\n\<li\> zero or more expressions of type \<code\>value\</code\> are the node\'\\s children.\</li\>\n\n\</ul\>\nNodes can have \<a href=\"/show?concept=Annotations\"\>Annotations\</a\>.\n","\<pre class=\"screen\"\>\</pre\>\n A node with name \"my_node\" and three arguments\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>&quot;my_node&quot;(1, true, &quot;abc&quot;);\nnode: my_node(1,true,\"abc\")\n\</pre\>\n A nested node structure:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>&quot;my_node1&quot;(1, &quot;my_node2&quot;(3.5, [&quot;a&quot;, &quot;b&quot;,&raquo;\n &quot;c&quot;]), true);\nnode: my_node1(1,my_node2(3.5,[\"a\",\"b\",\"c\"]),true)\n\</pre\>","","",[])
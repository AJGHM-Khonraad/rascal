concept("Location",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Location/Location.concept|,[],[],{"Language"},{},""," \<code\>\n  | \<i\>Uri\</i\> | ( \<i\>O\</i\>, \<i\>L\</i\>, &lt;\<i\>BL\</i\>, \<i\>BC\</i\>\> , &lt;\<i\>EL\</i\>,\<i\>EC\</i\>\> )\n\</code\>\n where:\n \<ul\>\n  \<li\> \<code\>\n    \<i\>Uri\</i\>\n  \</code\> is an arbitrary Uniform Resource Identifier (URI).\</li\>\n  \<li\> \<code\>\n    \<i\>O\</i\>\n  \</code\> and \<code\>\n    \<i\>L\</i\>\n  \</code\> are integer expressions giving the offset of this location to the begin of file, respectively, its length.\</li\>\n  \<li\> \<code\>\n    \<i\>BL\</i\>\n  \</code\> and \<code\>\n    \<i\>BC\</i\>\n  \</code\> are integers expressions giving the begin line and begin column.\</li\>\n  \<li\> \<code\>\n    \<i\>EL\</i\>\n  \</code\> and \<code\>\n    \<i\>EC\</i\>\n  \</code\> are integers expressions giving the end line and end column.\</li\>\n  \n\</ul\> The part following the second pipe symbol (\<code\>\n  |\n\</code\>) is optional.\n"," \<code\>\n  loc\n\</code\>\n","",{"\>","\<",",","|",")","(","loc"}," Location values are represented by the type \<code\>\n  loc\n\</code\> and serve the following purposes:\n \<ul\>\n  \<li\> Providing a uniform mechanism for accessing local or remote files. This is used in all IO-related library functions.\</li\>\n  \<li\> If the optional part is present they serve as text coordinates in a specific local or remote source file.   This is very handy to associate a source code location which extracted facts.\n  \</li\>\n  \n\</ul\> URIs are explained in \<a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Identifier\"\>Uniform Resource Identifier\</a\>. From their original definition in RFC3986 we cite the following useful overview of an URI:\n \<pre class=\"listing\"\>\n         foo://example.com:8042/over/there?name=ferret#nose\n         \\_/   \\______________/\\_________/ \\_________/ \\__/\n          |           |            |            |        |\n       scheme     authority       path        query   fragment\n          |   _____________________|__\n         / \\ /                        \\\n         urn:example:animal:ferret:nose\n\</pre\> The elements of a location value can be accessed and modified using the standard mechanism of field selection and field assignment. The corresponding field names are:\n  \<ul\>\n  \<li\> \<code\>\n    uri\n  \</code\>: the URI of the location. Also subfields of the URI can be accessed: \<ul\>\n    \<li\>\<code\>\n      scheme\n    \</code\>: the scheme (or protocol) to be used. Supported protocols are: \<ul\>\n      \<li\> \<code\>\n        http\n      \</code\>: access remote file via the web.\</li\>\n      \<li\> \<code\>\n        file\n      \</code\>: access local file on the file system.\</li\>\n      \<li\> \<code\>\n        cwd\n      \</code\>: access the current working directory (the directory from which Rascal was started).\</li\>\n      \<li\> \<code\>\n        home\n      \</code\>: access the home directory of the user.\</li\>\n      \<li\> \<code\>\n        std\n      \</code\>: access the Rascal standard library.\</li\>\n      \n    \</ul\>\</li\>\n    \<li\>\<code\>\n      authority\n    \</code\>: the domain where the data are located.\</li\>\n    \<li\>\<code\>\n      host\n    \</code\>: the host where the URI is hosted (part of authority).\</li\>\n    \<li\>\<code\>\n      port\n    \</code\>: port on host (part ofauthority).\</li\>\n    \<li\>\<code\>\n      path\n    \</code\>: path name of file on host.\</li\>\n    \<li\>\<code\>\n      extension\n    \</code\>: file name extension.\</li\>\n    \<li\>\<code\>\n      query\n    \</code\>: query data\</li\>\n    \<li\>\<code\>\n      fragment\n    \</code\>: the fragment name following the path name and query data.\</li\>\n    \<li\>\<code\>\n      user\n    \</code\>: user info (only present in schemes like mailto).\</li\>\n    \n  \</ul\>\</li\>\n  \<li\>\<code\>\n    offset\n  \</code\>: start of text area.\</li\>\n  \<li\>\<code\>\n    length\n  \</code\>: length of text area\</li\>\n  \<li\>\<code\>\n    begin.line\n  \</code\>, \<code\>\n    begin.column\n  \</code\>: begin line and column of text area.\</li\>\n  \<li\>\<code\>\n    end.line\n  \</code\>, \<code\>\n    end.column\n  \</code\> end line and column of text area.\</li\>\n  \n\</ul\>"," Locations with specific position information should always be generated automatically but for the curious here is an example:\n \<pre class=\"listing\"\>|file:///home/paulk/pico.trm|(0,1,&lt;2,3\>,&lt;4,5\>)\n\</pre\>","","",[])
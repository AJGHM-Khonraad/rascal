concept("Composition",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/Relation/Composition/Composition.concept|,[],[],{"Language"},{},""," \<code\>\n  \<i\>Exp\</i\>\<sub\>1\</sub\> o \<i\>Exp\</i\>\<sub\>2\</sub\>\n\</code\>\n"," \<table\>\n  \<col align=\"left\" /\>\<col align=\"left\" /\>\<col align=\"left\" /\>\<tr\>\<th align=\"left\"\>\<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\>\n  \</code\>            \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\>           \</th\>\<th align=\"left\"\> \<code\>\n    \<i\>Exp\</i\>\<sub\>1\</sub\> o \<i\>Exp\</i\>\<sub\>2\</sub\>\n  \</code\> \</th\>\</tr\>\<tr\>\<td align=\"left\"\>\n     \<code\>\n      rel[\<i\>T\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>2\</sub\>]\n    \</code\> \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      rel[\<i\>T\</i\>\<sub\>2\</sub\>, \<i\>T\</i\>\<sub\>3\</sub\>]\n    \</code\> \n  \</td\>\<td align=\"left\"\>\n     \<code\>\n      rel[\<i\>T\</i\>\<sub\>1\</sub\>, \<i\>T\</i\>\<sub\>3\</sub\>]\n    \</code\> \n  \</td\>\</tr\>\n\</table\>","",{"o","]",",","[","rel"}," Returns the composition of two binary relations.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import Relation;\nok\n\<b\>rascal\>\</b\>{&lt;1,10&gt;, &lt;2,20&gt;, &lt;3,15&gt;} o {&lt;10,100&gt;, &lt;20,200&gt;};\nrel[int, int]: {\n  &lt;1,100&gt;,\n  &lt;2,200&gt;\n}\n\</pre\>",""," We use the letter \<code\>\n  o\n\</code\> as operator and this may conflict other defined names.\n",[])
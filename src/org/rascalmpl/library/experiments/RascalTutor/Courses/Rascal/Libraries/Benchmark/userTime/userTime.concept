Name: userTime

Synopsis: Measuring user time.

Syntax:

Types:

Function:
# `int userTime()`
# `int userTime(void () block)`

Details:

Description:
# Current time in nanoseconds since the start of the thread that runs the code that calls this function.
# User time in nanoseconds needed to execute the code `block`.

Examples:

We use the factorial function described in [Recipes:Factorial] as example:
<screen>
import Benchmark;
import demo::basic::Factorial;
// Here we measure time by using separate calls to `userTime` before and after a call to `fac`.
before = userTime();
fac(50);
userTime() - before;
// The code to be measured can also be passed as a function parameter to `userTime`:
userTime( void() { fac(50); } );
</screen>

Benefits:

Pitfalls:

Questions:


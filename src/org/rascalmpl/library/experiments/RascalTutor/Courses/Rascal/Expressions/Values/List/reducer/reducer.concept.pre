concept("reducer",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/reducer/reducer.concept|,[],[],{"Library"},{},"","",""," \<code\>\n  &amp;T reducer(list[&amp;T] lst, &amp;T (&amp;T, &amp;T) fn, &amp;T unit)\n\</code\>\n",{}," Apply the function \<code\>\n  fn\n\</code\> to successive elements of list \<code\>\n  lst\n\</code\> starting with \<code\>\n  unit\n\</code\>.\n"," \<pre class=\"screen\"\>\<b\>rascal\>\</b\>import List;\nok\n\<b\>rascal\>\</b\>int add(int x, int y) { return x + y; }\nint (int, int): int add(int, int);\n\<b\>rascal\>\</b\>reducer([10, 20, 30, 40], add, 0); \nint: 100\n\</pre\>","","",[])
concept("tail",|std:///experiments/RascalTutor/Courses/Rascal/Expressions/Values/List/tail/tail.concept|,[],[],{"Library"},{},"","",""," \<ol\>\n  \<li\> \<code\>\n    list[&amp;T] tail(list[&amp;T] lst) throws EmptyList\n  \</code\>\</li\>\n  \<li\> \<code\>\n    list[&amp;T] tail(list[&amp;T] lst, int len) throws IndexOutOfBounds(int index)\n  \</code\>\</li\>\n  \n\</ol\>",{}," \<ol\>\n  \<li\> Return a list consisting of all but the first element of \<code\>\n    lst\n  \</code\>.\</li\>\n  \<li\> Return a list consisting of the last \<code\>\n    n\n  \</code\> elements of \<code\>\n    lst\n  \</code\>.\</li\>\n  \n\</ol\>"," \<pre class=\"screen\"\>\</pre\>\n  All but first element:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>import List;\nok\n\<b\>rascal\>\</b\>tail([10,20,30]);\nlist[int]: [20,30]\n\<b\>rascal\>\</b\>tail([]);\nUncaught Rascal Exception: prompt:///:1,0: EmptyList()\n    somewhere in: $shell$\n\</pre\>\n  Last n elements:\n\n\<pre class=\"screen\"\>\<b\>rascal\>\</b\>tail([10, 20, 30, 40, 50, 60], 3);\nlist[int]: [40,50,60]\n\<b\>rascal\>\</b\>tail([10, 20, 30, 40, 50, 60], 10);\nUncaught Rascal Exception: prompt:///:1,0: IndexOutOfBounds(4)\n    somewhere in: $shell$\n\</pre\>","","",[])
course("Tutor",["\<a href=\"/Courses/Tutor/Tutor.html\"\>Tutor\</a\>/\<a href=\"/Courses/Tutor/Markup/Markup.html\"\>Markup\</a\>/\<a href=\"/Courses/Tutor/Markup/StructureMarkup/StructureMarkup.html\"\>StructureMarkup\</a\>/\<a href=\"/Courses/Tutor/Markup/StructureMarkup/warning/warning.html\"\>warning\</a\>: This is an example warning"],("Tutor/Markup/QuestionMarkup/Value":concept("Tutor/Markup/QuestionMarkup/Value",|std:///experiments/RascalTutor/Courses/Tutor/Markup/QuestionMarkup/Value/Value.concept|,[],[],{":","QValue"},[tvQuestion("1",valueOfExpr(),details(" ",[],"","","\<A:set[int]\> + \<B:same[A]\>","",false,false,[<"A",set(int(-20,20))>,<"B",same("A")>],[],void(),"")),tvQuestion("2",valueOfExpr(),details(" ",["import List;"],"","","size(\<A:list[int]\>) == ","",false,true,[<"A",list(int(-20,20))>],[],void(),"")),tvQuestion("3",valueOfExpr(),details(" ",[],"","","\<A\> + "," == \<C\>",false,true,[<"A",set(arb(0,[int(-20,20),str()]))>,<"B",same("A")>],[<"C","\<A\> + \<B\>">],void(),"\<B\>")),tvQuestion("4",valueOfExpr(),details(" Return the strings that contain \"o\".\n",[],"text = [\"andra\", \"moi\", \"ennepe\", \"Mousa\", \"polutropon\"];\npublic list[str] find(list[str] text){\n  return \n    for(s \<- text)\n      if(/o/ \<- s)\n        ",";\n}\n","find(text) == [\"moi\", \"Mousa\", \"polutropon\"];","",true,false,[],[],void(),""))]),"Tutor/Markup/StructureMarkup/TableOfContents":concept("Tutor/Markup/StructureMarkup/TableOfContents",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/TableOfContents/TableOfContents.concept|,[],[],{"\>","\<","toc"},[]),"Tutor/Concept/Pitfalls":concept("Tutor/Concept/Pitfalls",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Pitfalls/Pitfalls.concept|,[],[],{"Pitfalls",":"},[]),"Tutor/Markup/InlineMarkup/Variable":concept("Tutor/Markup/InlineMarkup/Variable",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Variable/Variable.concept|,[],[],{"VarName","Index","Varname"},[]),"Tutor/Markup/QuestionMarkup":concept("Tutor/Markup/QuestionMarkup",|std:///experiments/RascalTutor/Courses/Tutor/Markup/QuestionMarkup/QuestionMarkup.concept|,[],[],{},[]),"Tutor/Markup/StructureMarkup/warning":concept("Tutor/Markup/StructureMarkup/warning",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/warning/warning.concept|,["This is an example warning"],[],{"\>","warning","\<","\</"},[]),"Tutor/Concept/Function":concept("Tutor/Concept/Function",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Function/Function.concept|,[],[],{":","Function"},[]),"Tutor/Markup/StructureMarkup/NamedParagraph":concept("Tutor/Markup/StructureMarkup/NamedParagraph",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/NamedParagraph/NamedParagraph.concept|,[],[],{"===","====","=="},[]),"Tutor/Markup/QuestionMarkup/Choice":concept("Tutor/Markup/QuestionMarkup/Choice",|std:///experiments/RascalTutor/Courses/Tutor/Markup/QuestionMarkup/Choice/Choice.concept|,[],[],{"XChoice"},[]),"Tutor/Concept/Synopsis":concept("Tutor/Concept/Synopsis",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Synopsis/Synopsis.concept|,[],[],{":","Synopsis"},[]),"Tutor/Markup/StructureMarkup/BulletLists":concept("Tutor/Markup/StructureMarkup/BulletLists",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/BulletLists/BulletLists.concept|,[],[],{"***","*","**"},[]),"Tutor/Markup/StructureMarkup/NewParagraph":concept("Tutor/Markup/StructureMarkup/NewParagraph",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/NewParagraph/NewParagraph.concept|,[],[],{},[]),"Tutor/Markup/InlineMarkup/Italic":concept("Tutor/Markup/InlineMarkup/Italic",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Italic/Italic.concept|,[],[],{"_"},[]),"Tutor/Markup/InlineMarkup/Callout":concept("Tutor/Markup/InlineMarkup/Callout",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Callout/Callout.concept|,[],[],{},[]),"Tutor/Markup/InlineMarkup":concept("Tutor/Markup/InlineMarkup",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/InlineMarkup.concept|,[],[],{},[]),"Tutor/Markup/StructureMarkup":concept("Tutor/Markup/StructureMarkup",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/StructureMarkup.concept|,[],[],{},[]),"Tutor/Concept/Questions":concept("Tutor/Concept/Questions",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Questions/Questions.concept|,[],[],{"Questions",",",":"},[]),"Tutor/Markup/InlineMarkup/Code":concept("Tutor/Markup/InlineMarkup/Code",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Code/Code.concept|,[],[],{},[]),"Tutor/Concept/Name":concept("Tutor/Concept/Name",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Name/Name.concept|,[],[],{"Name",":"},[]),"Tutor/Concept/Examples":concept("Tutor/Concept/Examples",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Examples/Examples.concept|,[],[],{":","Examples"},[]),"Tutor/Markup/InlineMarkup/ExternalURL":concept("Tutor/Markup/InlineMarkup/ExternalURL",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/ExternalURL/ExternalURL.concept|,[],[],{"](","[",")"},[]),"Tutor/Markup/StructureMarkup/listing":concept("Tutor/Markup/StructureMarkup/listing",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/listing/listing.concept|,[],[],{"`\<","listing","#","\>`"},[]),"Tutor/Markup/InlineMarkup/ReferenceToConcept":concept("Tutor/Markup/InlineMarkup/ReferenceToConcept",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/ReferenceToConcept/ReferenceToConcept.concept|,[],[],{"]","[",":"},[]),"Tutor/Concept/Details":concept("Tutor/Concept/Details",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Details/Details.concept|,[],[],{",",":","Details"},[]),"Tutor/Markup":concept("Tutor/Markup",|std:///experiments/RascalTutor/Courses/Tutor/Markup/Markup.concept|,[],[],{},[]),"Tutor/Authoring":concept("Tutor/Authoring",|std:///experiments/RascalTutor/Courses/Tutor/Authoring/Authoring.concept|,[],[],{},[]),"Tutor/Markup/QuestionMarkup/TypeDescriptor":concept("Tutor/Markup/QuestionMarkup/TypeDescriptor",|std:///experiments/RascalTutor/Courses/Tutor/Markup/QuestionMarkup/TypeDescriptor/TypeDescriptor.concept|,[],[],{"list","real","]","map","datetime","[","void","arb","value","str","...]","int",",","bool","tuple","same","num","set","loc"},[]),"Tutor/Concept/Description":concept("Tutor/Concept/Description",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Description/Description.concept|,[],[],{"Description",":"},[]),"Tutor/Concept/Benefits":concept("Tutor/Concept/Benefits",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Benefits/Benefits.concept|,[],[],{"Benefits",":"},[]),"Tutor/Markup/InlineMarkup/Image":concept("Tutor/Markup/InlineMarkup/Image",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Image/Image.concept|,[],[],{"|","](","![",")"},[]),"Tutor/Concept/Types":concept("Tutor/Concept/Types",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Types/Types.concept|,[],[],{":","Types"},[]),"Tutor":concept("Tutor",|std:///experiments/RascalTutor/Courses/Tutor/Tutor.concept|,[],["Contents"],{},[]),"Tutor/Contents":concept("Tutor/Contents",|std:///experiments/RascalTutor/Courses/Tutor/Contents/Contents.concept|,[],[],{},[]),"Tutor/Concept":concept("Tutor/Concept",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Concept.concept|,[],["Name","Synopsis","Syntax","Types","Function","Details","Description","Examples","Benefits","Pitfalls","Questions"],{"Questions","Pitfalls",",","Benefits","Description","Name",":","Examples","Types","Function","Synopsis","Syntax","Details"},[]),"Tutor/Markup/StructureMarkup/screen":concept("Tutor/Markup/StructureMarkup/screen",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/screen/screen.concept|,[],[],{"\>","\<","screen","\</"},[]),"Tutor/Markup/QuestionMarkup/Type":concept("Tutor/Markup/QuestionMarkup/Type",|std:///experiments/RascalTutor/Courses/Tutor/Markup/QuestionMarkup/Type/Type.concept|,[],[],{"QType",":"},[tvQuestion("1",typeOfExpr(),details(" ",[],"","","\<A:set[int]\>","",false,false,[<"A",set(int(-20,20))>],[],void(),"")),tvQuestion("2",typeOfExpr(),details(" ",[],"","","\<A:set[arb[int,str,real]]\> + \<B:same[A]\>","",false,false,[<"A",set(arb(0,[int(-20,20),str(),real(-20,20)]))>,<"B",same("A")>],[],void(),""))]),"Tutor/Markup/StructureMarkup/Table":concept("Tutor/Markup/StructureMarkup/Table",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/Table/Table.concept|,[],[],{"\\","|","|---------|---------|"},[]),"Tutor/Markup/StructureMarkup/NumberedLists":concept("Tutor/Markup/StructureMarkup/NumberedLists",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/NumberedLists/NumberedLists.concept|,[],[],{"###","#","##"},[]),"Tutor/Markup/StructureMarkup/figure":concept("Tutor/Markup/StructureMarkup/figure",|std:///experiments/RascalTutor/Courses/Tutor/Markup/StructureMarkup/figure/figure.concept|,[],[],{"\>","\<","x","figure","\</"},[]),"Tutor/Markup/InlineMarkup/Bold":concept("Tutor/Markup/InlineMarkup/Bold",|std:///experiments/RascalTutor/Courses/Tutor/Markup/InlineMarkup/Bold/Bold.concept|,[],[],{"__"},[]),"Tutor/Concept/Syntax":concept("Tutor/Concept/Syntax",|std:///experiments/RascalTutor/Courses/Tutor/Concept/Syntax/Syntax.concept|,[],[],{":","Syntax"},[])),["![","#","##","###",")","*","**","***",",","...]",":","\<","\</","==","===","====","\>","\>`","Authoring","Benefits","Bold","BulletLists","Callout","Choice","Code","Concept","Contents","Description","Details","Examples","ExternalURL","Function","Image","Index","InlineMarkup","Italic","Markup","Name","NamedParagraph","NewParagraph","NumberedLists","Pitfalls","QType","QValue","QuestionMarkup","Questions","ReferenceToConcept","StructureMarkup","Synopsis","Syntax","Table","TableOfContents","Tutor","Type","TypeDescriptor","Types","Value","VarName","Variable","Varname","XChoice","[","\\","]","](","_","__","`\<","arb","bool","datetime","figure","int","list","listing","loc","map","num","real","same","screen","set","str","toc","tuple","void","warning","|","|---------|---------|"])
module languages/new-rascal/syntax/Commands

imports languages/new-rascal/syntax/Declarations
imports languages/new-rascal/syntax/Statements
imports languages/new-rascal/syntax/Modules


exports

sorts Command
context-free syntax

":" command:ShellCommand   -> Command {cons("Shell")}
statement:Statement        -> Command {cons("Statement")}
expression:Expression      -> Command {prefer, cons("Expression")}
declaration:Declaration    -> Command {avoid, cons("Declaration")}
imported:Import            -> Command {cons("Import")}

context-free priorities 
  %% forbid direct nesting of closures as commands, since they don't compute anything and don't have an effect.
  expression:Expression -> Command {prefer, cons(Expression)} >
  "{" statements:Statement+ "}"    -> Expression {cons("NonEmptyBlock")}

sorts ShellCommand
context-free syntax

"help"                                -> ShellCommand {cons("Help")}
"quit"                                -> ShellCommand {cons("Quit")}
"edit" name:QualifiedName             -> ShellCommand {cons("Edit")}
"modules"                             -> ShellCommand {cons("ListModules")}
"declarations"                        -> ShellCommand {cons("ListDeclarations")} 
"test"                                -> ShellCommand {cons("Test")} 
"unimport" name:QualifiedName         -> ShellCommand {cons("Unimport")} 
"undeclare" name:QualifiedName        -> ShellCommand {cons("Undeclare")} 
"history"                             -> ShellCommand {cons("History")}
"set" name:QualifiedName expression:Expression -> ShellCommand {cons("SetOption")} 
